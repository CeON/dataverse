# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, The President & Fellows of Harvard College
# This file is distributed under the same license as the Dataverse package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dataverse 4.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-20 18:16+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/developers/selinux.rst:3
msgid "SELinux"
msgstr ""

#: ../../source/developers/selinux.rst:6
msgid "|toctitle|"
msgstr ""

#: ../../source/developers/selinux.rst:9
msgid "Introduction"
msgstr ""

#: ../../source/developers/selinux.rst:11
msgid ""
"The :download:`shibboleth.te "
"<../_static/installation/files/etc/selinux/targeted/src/policy/domains/misc/shibboleth.te>`"
" file that is mentioned in the :doc:`/installation/shibboleth` section of"
" the Installation Guide was created on CentOS 6 as part of "
"https://github.com/IQSS/dataverse/issues/3406 but may need to be revised "
"for future versions of RHEL/CentOS (pull requests welcome!). The file is "
"versioned with the docs and here is the current content of it:"
msgstr ""

#: ../../source/developers/selinux.rst:16
msgid ""
"This document is something of a survival guide for anyone who is tasked "
"with updating this file."
msgstr ""

#: ../../source/developers/selinux.rst:19
msgid "Development Environment"
msgstr ""

#: ../../source/developers/selinux.rst:21
msgid ""
"In order to work on the ``shibboleth.te`` file you need to ``ssh`` into a"
" RHEL or CentOS box running Shibboleth (instructions are in the "
":doc:`/installation/shibboleth` section of the Installation Guide) such "
"as https://beta.dataverse.org or https://demo.dataverse.org that has "
"installed all the commands mentioned in this document. As of this "
"writing, the ``policycoreutils-python`` RPM was required."
msgstr ""

#: ../../source/developers/selinux.rst:24
msgid "Recreating the shibboleth.te File"
msgstr ""

#: ../../source/developers/selinux.rst:26
msgid ""
"If you're reading this page because someone has reported that Shibboleth "
"doesn't work with SELinux anymore (due to an operating system upgrade, "
"perhaps) you *could* start with the existing ``shibboleth.te`` file, but "
"it is recommended that you create a new one instead to ensure that extra "
"lines aren't included that are no longer necessary."
msgstr ""

#: ../../source/developers/selinux.rst:28
msgid ""
"The file you're recreating is called a Type Enforcement (TE) file, and "
"you can read more about it at https://access.redhat.com/documentation/en-"
"US/Red_Hat_Enterprise_Linux/6/html/Security-Enhanced_Linux/chap-Security-"
"Enhanced_Linux-SELinux_Contexts.html"
msgstr ""

#: ../../source/developers/selinux.rst:30
msgid ""
"The following doc may or may not be helpful to orient you: "
"https://access.redhat.com/documentation/en-"
"US/Red_Hat_Enterprise_Linux/6/html/Security-Enhanced_Linux/sect-Security-"
"Enhanced_Linux-Fixing_Problems-Allowing_Access_audit2allow.html"
msgstr ""

#: ../../source/developers/selinux.rst:33
msgid "Ensure that SELinux is Enforcing"
msgstr ""

#: ../../source/developers/selinux.rst:35
msgid ""
"If ``getenforce`` returns anything other than ``Enforcing``, run "
"``setenforce Enforcing`` or otherwise configure SELinux by editing "
"``/etc/selinux/config`` and rebooting until SELinux is enforcing."
msgstr ""

#: ../../source/developers/selinux.rst:38
msgid "Removing the Existing shibboleth.te Rules"
msgstr ""

#: ../../source/developers/selinux.rst:40
msgid ""
"Use ``semodule -l | grep shibboleth`` to see if the ``shibboleth.te`` "
"rules are already installed. Run ``semodule -r shibboleth`` to remove the"
" module, if necessary. Now we're at square one (no custom rules) and "
"ready to generate a new ``shibboleth.te`` file."
msgstr ""

#: ../../source/developers/selinux.rst:43
msgid "Exercising SELinux denials"
msgstr ""

#: ../../source/developers/selinux.rst:45
msgid ""
"As of this writing, there are two optional components of Dataverse that "
"are known not to work with SELinux out of the box with SELinux: "
"Shibboleth and rApache."
msgstr ""

#: ../../source/developers/selinux.rst:47
msgid ""
"We will be exercising SELinux denials with Shibboleth, and the SELinux-"
"related issues are expected out the box:"
msgstr ""

#: ../../source/developers/selinux.rst:49
msgid ""
"Problems with the dropdown of institutions being created on the Login "
"Page (\"Internal Error - Failed to download metadata from "
"/Shibboleth.sso/DiscoFeed.\")."
msgstr ""

#: ../../source/developers/selinux.rst:50
msgid ""
"Problems with the return trip after you've logged into HarvardKey or "
"whatever (\"shibsp::ListenerException\" and \"Cannot connect to shibd "
"process, a site adminstrator should be notified.\")."
msgstr ""

#: ../../source/developers/selinux.rst:52
msgid ""
"In short, all you need to do is try to log in with Shibboleth and you'll "
"see problems associated with SELinux being enabled."
msgstr ""

#: ../../source/developers/selinux.rst:55
msgid "Stub out the new shibboleth.te file"
msgstr ""

#: ../../source/developers/selinux.rst:57
msgid ""
"Iterate on the new ``shibboleth.te`` file wherever you like, such as the "
"root user's home directory in the following example. Start by adding a "
"``module`` line like this::"
msgstr ""

#: ../../source/developers/selinux.rst:61
msgid ""
"Note that a version is required and perhaps it should be changed, but "
"we'll stick with ``1.0`` for now. The point is that the ``shibboleth.te``"
" file must begin with that \"module\" line or else the ``checkmodule`` "
"command you'll need to run later will fail. Your file should look like "
"this:"
msgstr ""

#: ../../source/developers/selinux.rst:70
msgid "Iteratively Use audit2allow to Add Rules and Test Your Change"
msgstr ""

#: ../../source/developers/selinux.rst:72
msgid ""
"Now that ``shibboleth.te`` has been stubbed out, we will iteratively add "
"lines to it from the output of piping SELinux Access Vector Cache (AVC) "
"denial messages to ``audit2allow -r``. These errors are found in "
"``/var/log/audit/audit.log`` so tail the file as you attempt to log in to"
" Shibboleth::"
msgstr ""

#: ../../source/developers/selinux.rst:76
msgid "You should see messages that look something like this::"
msgstr ""

#: ../../source/developers/selinux.rst:80
msgid "Next, pipe these message to ``audit2allow -r`` like this::"
msgstr ""

#: ../../source/developers/selinux.rst:84
msgid "This will produce output like this:"
msgstr ""

#: ../../source/developers/selinux.rst:97
msgid ""
"Copy and paste this output into the ``shibboleth.te`` file. Then, use the"
" same ``checkmodule``, ``semodule_package``, and ``semodule`` commands "
"documented in the :doc:`/installation/shibboleth` section of the "
"Installation Guide on your file to activate the SELinux rules you're "
"constructing."
msgstr ""

#: ../../source/developers/selinux.rst:99
msgid ""
"Once your updated SELinux rules are in place, try logging in with "
"Shibboleth again. You should see a different AVC error. Pipe that error "
"into ``audit2allow -r`` as well and put the resulting content into the "
"``shibboleth.te`` file you're constructing. As you do this, manually "
"reformat the file using the following rules:"
msgstr ""

#: ../../source/developers/selinux.rst:101
msgid "Put the ``require`` block at the top."
msgstr ""

#: ../../source/developers/selinux.rst:102
msgid "Within the require block, sort the lines."
msgstr ""

#: ../../source/developers/selinux.rst:103
msgid "Put the ``allow`` lines at the bottom and sort them."
msgstr ""

#: ../../source/developers/selinux.rst:104
msgid ""
"Where possible, avoid duplicate lines by combining operations such as "
"``open`` and ``read`` into ``{open read}``."
msgstr ""

#: ../../source/developers/selinux.rst:105
msgid "Remove all comment lines."
msgstr ""

#: ../../source/developers/selinux.rst:107
msgid ""
"Keep iterating until it works and then create a pull request based on "
"your updated file. Good luck!"
msgstr ""

#: ../../source/developers/selinux.rst:109
msgid ""
"Many thanks to Bill Horka from IQSS for his assistance in explaining how "
"to construct a SELinux Type Enforcement (TE) file!"
msgstr ""

#: ../../source/developers/selinux.rst:113
msgid "Previous: :doc:`geospatial` | Next: :doc:`big-data-support`"
msgstr ""


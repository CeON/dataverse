<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:o="http://omnifaces.org/ui"
                xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
                xmlns:jsf="http://xmlns.jcp.org/jsf">

    <o:importConstants type="edu.harvard.iq.dataverse.persistence.datafile.license.FileTermsOfUse.TermsOfUseType" var="termsOfUseTypeEnum"/>
    <o:importConstants type="edu.harvard.iq.dataverse.search.query.SearchObjectType" var="searchObjectTypeEnum"/>
    
    <c:set var="page" value="/dataverse/#{SearchIncludeFragment.dataverse.alias}"/>

    <!--@elvariable id="friendlyNames" type="java.util.List<java.lang.String>"-->

    <!-- Search Form + Add Data Button -->
    <div class="row panelSearchForm" jsf:rendered="#{!SearchIncludeFragment.solrIsDown}">
        <div class="#{widgetWrapper.widgetView ? 'col-sm-12' : 'col-sm-8'}">
            <h:form>
                <h:outputLabel styleClass="sr-only" value="#{bundle['dataverse.search.label']}" for="searchBasic" />
                <p:inputText id="searchBasic" styleClass="search-input" size="40" value="#{SearchIncludeFragment.query}" onkeypress="if (event.keyCode == 13) { submitsearch(); return false; }"/>
                <p:watermark for="searchBasic" value="#{bundle['dataverse.search.input.watermark']}"/>
                <p:commandLink id="searchbutton" styleClass="btn btn-default btn-access" action="#{SearchIncludeFragment.searchRedirect()}">
                    <span class="glyphicon glyphicon-search"/> #{bundle['dataverse.search.btn.find']}
                </p:commandLink>
                <p:remoteCommand name="submitsearch" action="#{SearchIncludeFragment.searchRedirect()}"/>
                <h:outputLink id="advsearchlink" value="#{widgetWrapper.wrapURL('/search/advanced.xhtml')}">
                    <f:param name="dataverseIdentifier" value="#{SearchIncludeFragment.dataverse.alias}"/>
                    <h:outputText value="#{bundle['dataverse.search.advancedSearch']}"/>
                </h:outputLink>
            </h:form>
        </div>
        <div class="col-sm-4 text-right col-manage-action" jsf:rendered="#{!widgetWrapper.widgetView}">
            <div class="button-block pull-right">
                <!-- ADD DATA -->
                <o:importFunctions type="edu.harvard.iq.dataverse.persistence.group.AuthenticatedUsers" />
                <ui:fragment rendered="#{!dataverseSession.user.authenticated and (permissionServiceBean.userOn(AuthenticatedUsers:get(),SearchIncludeFragment.dataverse).canIssueCommand('CreateDataverseCommand')
                                         or permissionServiceBean.userOn(AuthenticatedUsers:get(),SearchIncludeFragment.dataverse).canIssueCommand('CreateNewDatasetCommand'))}">
                    <button type="button" class="btn btn-default btn-access" onclick="PF('addData_popup').show()">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"/> #{bundle['dataverse.results.btn.addData']}
                    </button>
                </ui:fragment>
                <h:form id="addDataForm" class="btn-form"
                        rendered="#{dataverseSession.user.authenticated and (permissionsWrapper.canIssueCreateDataverseCommand(SearchIncludeFragment.dataverse)
                                     or permissionsWrapper.canIssueCreateDatasetCommand(SearchIncludeFragment.dataverse))}">
                    <div class="btn-group">
                        <button id="addData" type="button" class="btn btn-default btn-access dropdown-toggle" data-toggle="dropdown"
                                aria-haspopup="true" aria-expanded="false">
                            <span class="glyphicon glyphicon-plus" aria-hidden="true"/> #{bundle['dataverse.results.btn.addData']} <span class="caret"></span>
                        </button>
                        <ul id="addDataMenu" class="dropdown-menu pull-right text-left" role="menu" aria-labelledby="addData">
                            <ui:fragment rendered="#{permissionsWrapper.canIssueCreateDataverseCommand(SearchIncludeFragment.dataverse) }">
                                <li role="none">
                                    <a href="${pageContext.request.contextPath}/createEditDataverse.xhtml?ownerId=#{SearchIncludeFragment.dataverse.id}&amp;dataverseOwnerAlias=#{SearchIncludeFragment.dataverse.alias}"
                                            role="menuitem">
                                        #{bundle['dataverse.results.btn.addData.newDataverse']}
                                    </a>
                                </li>
                            </ui:fragment>
                            <ui:fragment rendered="#{permissionsWrapper.canIssueCreateDatasetCommand(SearchIncludeFragment.dataverse) }">
                                <li role="none">
                                    <a href="${pageContext.request.contextPath}/createDataset.xhtml?ownerId=#{SearchIncludeFragment.dataverse.id}"
                                            role="menuitem">
                                        #{bundle['dataverse.results.btn.addData.newDataset']}
                                    </a>
                                </li>
                            </ui:fragment>
                        </ul>
                    </div>
                </h:form>
            </div>
        </div>
    </div>

    <!-- Message Block / SOLR IS DOWN -->
    <div class="row" jsf:rendered="#{SearchIncludeFragment.solrIsDown}">
        <div class="col-sm-12">
            <div class="bg-danger padding-12 margin-bottom">
                <span class="glyphicon glyphicon-warning-sign text-danger"/>&#160;

                <h:outputText value="#{SearchIncludeFragment.searchException.message}" styleClass="text-danger highlightBold"/>

                <h:outputText value=" - #{bundle['dataverse.results.solrIsDown']}" styleClass="text-danger"/>
            </div>
            <pre><h:outputText value="#{SearchIncludeFragment.searchException.cause.message}"/></pre>
        </div>
    </div>

    <!-- Search Results / SOLR IS UP -->
    <div id="search-row-panel" class="row row-offcanvas row-offcanvas-left" jsf:rendered="#{!SearchIncludeFragment.solrIsDown}">
        <div id="dv-sidebar" class="col-sm-4 col-md-3 sidebar-offcanvas">
            <h2>#{bundle['dataverse.search.filters.header']}</h2>
        
            <!--TYPE FACET (DATAVERSES, DATASETS, FILES)-->
            <h:form id="facetType" styleClass="clearfix">
            
                <div class="clearfix">
                    <p:selectBooleanCheckbox id="checkDataverses" value="#{SearchIncludeFragment.selectedTypesMap[searchObjectTypeEnum.DATAVERSES]}"
                            styleClass="facetTypeChBox">
                        <p:ajax process="@form" update="@form" />
                    </p:selectBooleanCheckbox>

                    <i class="icon-dataverse text-icon-inline"></i>
                    
                    <p:outputLabel for="checkDataverses" styleClass="facetTypeLink chkbox-label-margin">
                        <h:outputFormat styleClass="facetTypeDataverse" value="#{bundle['dataverse.results.types.dataverses']} &#40;{0}&#41;">
                            <f:param value="#{SearchIncludeFragment.facetCountDataverses}"/>
                        </h:outputFormat>
                    </p:outputLabel>
                </div>
                
                <div class="clearfix">
                    <p:selectBooleanCheckbox id="checkDatasets" value="#{SearchIncludeFragment.selectedTypesMap[searchObjectTypeEnum.DATASETS]}"
                        styleClass="facetTypeChBox">
                        <p:ajax process="@form" update="@form" />
                    </p:selectBooleanCheckbox>

                    <i class="icon-dataset text-icon-inline"></i>

                    <p:outputLabel for="checkDatasets" styleClass="facetTypeLink chkbox-label-margin">
                        <h:outputFormat styleClass="facetTypeDataset" value="#{bundle['dataverse.results.types.datasets']} &#40;{0}&#41;">
                            <f:param value="#{SearchIncludeFragment.facetCountDatasets}"/>
                        </h:outputFormat>
                    </p:outputLabel>
                </div>
                    
                <div class="clearfix">
                    <p:selectBooleanCheckbox id="checkFiles" value="#{SearchIncludeFragment.selectedTypesMap[searchObjectTypeEnum.FILES]}"
                        styleClass="facetTypeChBox">
                        <p:ajax process="@form" update="@form" />
                    </p:selectBooleanCheckbox>

                    <i class="icon-file text-icon-inline"></i>

                    <p:outputLabel for="checkFiles" styleClass="facetTypeLink chkbox-label-margin">
                        <h:outputFormat styleClass="facetTypeFile" value="#{bundle['dataverse.results.types.files']} &#40;{0}&#41;">
                            <f:param value="#{SearchIncludeFragment.facetCountFiles}"/>
                        </h:outputFormat>
                    </p:outputLabel>
                </div>
                    
                <div class="pull-right">
                    <p:commandButton value="#{bundle.apply}"
                            disabled="#{SearchIncludeFragment.selectedTypesAreEmpty()}"
                            action="#{SearchIncludeFragment.searchWithSelectedTypesRedirect()}" />
                </div>
            </h:form>

            <!--NON-TYPE FACETS-->
            <h:form id="facetCategoryForm" rendered="#{SearchIncludeFragment.searchResultsCount > 0}">
                <p:dataList id="facetCategoryList" value="#{SearchIncludeFragment.facetCategoryList}" var="facetCategory">
                    <h:outputText value="#{facetCategory.displayName}" styleClass="facetCategoryName" escape="false"/>
                    <p:dataList value="#{facetCategory.facetLabel}" var="facetLabel" rows="#{SearchIncludeFragment.getNumberOfFacets(facetCategory.name,5)}">
                        <h:outputLink value="#{widgetWrapper.wrapURL(page)}" rendered="#{!SearchIncludeFragment.filterQueries.contains(facetLabel.filterQuery)}" styleClass="facetLink">
                            <h:outputFormat value="#{facetLabel.displayName} &#40;{0}&#41; ">
                                <f:param value="#{facetLabel.count}"/>
                            </h:outputFormat>
                            <h:outputText styleClass="sr-only" value=" #{facetCategory.displayName}: #{bundle['dataverse.search.filters.add.screenReaderPostfix']}" />
                            
                            <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                            <f:param name="fq#{SearchIncludeFragment.filterQueries.size()}" value="#{facetLabel.filterQuery}"/>
                            <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                            </c:forEach>
                            <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                            <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                            <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                        </h:outputLink>

                        <h:outputLink value="#{widgetWrapper.wrapURL(page)}" rendered="#{SearchIncludeFragment.filterQueries.contains(facetLabel.filterQuery)}" styleClass="facetLink facetSelected">
                            <h:outputFormat value="#{facetLabel.displayName} &#40;{0}&#41;">
                                <f:param value="#{facetLabel.count}"/>
                            </h:outputFormat>
                            <h:outputText styleClass="sr-only" value=" #{facetCategory.displayName}: #{bundle['dataverse.search.filters.remove.screenReaderPostfix']}" />
                            
                            <span class="glyphicon glyphicon-remove"></span>
                            <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                            <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                <f:param name="fq#{status.index}" value='#{clickedFilterQuery}' disable="#{clickedFilterQuery == facetLabel.filterQuery}"/>
                            </c:forEach>
                            <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                            <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                            <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                        </h:outputLink>
                    </p:dataList>
                    <ui:fragment rendered="#{facetCategory.name != SearchIncludeFragment.searchFieldType and facetCategory.name != SearchIncludeFragment.searchFieldSubtree}">
                        <div class="clearfix">
                            <h:panelGroup styleClass="pull-left" rendered="#{SearchIncludeFragment.getNumberOfFacets(facetCategory.name,5) gt 5}">
                                <p:commandLink actionListener="#{SearchIncludeFragment.incrementFacets(facetCategory.name,-5)}" update="facetCategoryList">
                                    <h:outputText styleClass="sr-only" value="#{bundle['dataverse.search.filters.showMoreLess.screenReaderPrefix']} " />
                                    #{bundle.less}
                                    <h:outputText styleClass="sr-only" value=" #{bundle['dataverse.search.filters.showMoreLess.screenReaderPostfix']} #{facetCategory.displayName}" />
                                </p:commandLink>
                            </h:panelGroup>
                            <h:panelGroup styleClass="pull-right" rendered="#{SearchIncludeFragment.getNumberOfFacets(facetCategory.name,5) lt facetCategory.facetLabel.size()}">
                                <p:commandLink actionListener="#{SearchIncludeFragment.incrementFacets(facetCategory.name,5)}" update="facetCategoryList">
                                    <h:outputText styleClass="sr-only" value="#{bundle['dataverse.search.filters.showMoreLess.screenReaderPrefix']}" />
                                    #{bundle.more}
                                    <h:outputText styleClass="sr-only" value=" #{bundle['dataverse.search.filters.showMoreLess.screenReaderPostfix']} #{facetCategory.displayName}" />
                                </p:commandLink>
                            </h:panelGroup>
                        </div>
                    </ui:fragment>
                </p:dataList>
            </h:form>
        </div>
        <div id="dv-main" class="col-sm-8 col-md-9">

            <!--toggle sidebar button-->
            <p class="visible-xs-block">
                <button type="button" class="btn btn-primary btn-xs" data-toggle="offcanvas" aria-expanded="false">
                    <i class="glyphicon glyphicon-chevron-left"></i>
                    <span class="show-hide-text">#{bundle.show}</span> #{bundle['dataverse.search.filters.showHideBtn.postfix']}
                </button>
            </p>

            <h2>#{bundle['dataverse.results.header']}</h2>
            
            <!-- Message for zero results -->
            <div id="emptyResults" class="emptyResults bg-warning" jsf:rendered="#{(empty SearchIncludeFragment.searchResultsList) and (!SearchIncludeFragment.wasSolrErrorEncountered())}">
                <!--SEARCH ZERO COUNTS-->
                <ui:fragment rendered="#{!empty SearchIncludeFragment.query and SearchIncludeFragment.facetCountDataverses eq 0 and SearchIncludeFragment.facetCountDatasets eq 0 and SearchIncludeFragment.facetCountFiles eq 0}">
                    <p><h:outputFormat value="#{bundle['dataverse.results.empty.zero']}" escape="false">
                        <f:param value="#{settingsWrapper.guidesBaseUrl}"/>
                        <f:param value="#{settingsWrapper.guidesVersion}"/>
                    </h:outputFormat></p>
                </ui:fragment>
                <ui:fragment rendered="#{empty SearchIncludeFragment.query}">
                    <!--THIS IS EMPTY / SEARCH-->
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses gt 0 or SearchIncludeFragment.facetCountDatasets gt 0 or SearchIncludeFragment.facetCountFiles gt 0}">
                        <!--SEARCH HIDDEN-->
                        <p><h:outputFormat value="#{bundle['dataverse.results.empty.hidden']}" escape="false">
                            <f:param value="#{settingsWrapper.guidesBaseUrl}"/>
                                <f:param value="#{settingsWrapper.guidesVersion}"/>
                            </h:outputFormat></p>
                    </ui:fragment>
                    <ui:fragment rendered="#{SearchIncludeFragment.errorFromSolr != null}">
                        <p>
                            <a data-toggle="collapse" data-parent="#emptyResults" href="#technicalDetails" aria-expanded="true" aria-controls="technicalDetails">[+] #{bundle['dataverse.results.empty.link.technicalDetails']}</a>
                        </p>
                        <div id="technicalDetails" class="collapse">
                            <pre><h:outputText value="#{SearchIncludeFragment.errorFromSolr}"/></pre>
                        </div>
                    </ui:fragment>
                </ui:fragment>
                <ui:fragment rendered="#{!dataverseSession.user.authenticated and empty SearchIncludeFragment.query}">
                    <!--THIS IS EMPTY / BROWSE / GUEST-->
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses eq 0 and SearchIncludeFragment.facetCountDatasets eq 0 and SearchIncludeFragment.facetCountFiles eq 0}">
                        <!--BROWSE GUEST ZERO COUNTS-->
                        <p>
                            <h:outputFormat value="#{bundle['dataverse.results.empty.browse.guest.zero']}" escape="false">
                                <f:param value="#{navigationWrapper.redirectPage}"/>
                            </h:outputFormat>
                        </p>
                    </ui:fragment>
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses gt 0 or SearchIncludeFragment.facetCountDatasets gt 0 or SearchIncludeFragment.facetCountFiles gt 0}">
                        <!--BROWSE GUEST HIDDEN-->
                        <p>
                            <h:outputFormat value="#{bundle['dataverse.results.empty.browse.guest.hidden']}" escape="false">
                                <f:param value="#{navigationWrapper.redirectPage}"/>
                            </h:outputFormat>
                        </p>
                    </ui:fragment>
                </ui:fragment>
                <ui:fragment rendered="#{dataverseSession.user.authenticated and !(permissionsWrapper.canIssueCreateDataverseCommand(SearchIncludeFragment.dataverse) or permissionsWrapper.canIssueCreateDatasetCommand(SearchIncludeFragment.dataverse)) and empty SearchIncludeFragment.query}">
                    <!--THIS IS EMPTY / BROWSE / LOGGED IN / NO PERMS-->
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses eq 0 and SearchIncludeFragment.facetCountDatasets eq 0 and SearchIncludeFragment.facetCountFiles eq 0}">
                        <!--BROWSE NO_ADD_BUTTON ZERO COUNTS-->
                        <p>#{bundle['dataverse.results.empty.browse.loggedin.noperms.zero']}</p>
                    </ui:fragment>
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses gt 0 or SearchIncludeFragment.facetCountDatasets gt 0 or SearchIncludeFragment.facetCountFiles gt 0}">
                        <!--BROWSE NO_ADD_BUTTON HIDDEN-->
                        <p>#{bundle['dataverse.results.empty.browse.loggedin.noperms.hidden']}</p>
                    </ui:fragment>
                </ui:fragment>
                <ui:fragment rendered="#{dataverseSession.user.authenticated and (permissionsWrapper.canIssueCreateDataverseCommand(SearchIncludeFragment.dataverse) or permissionsWrapper.canIssueCreateDatasetCommand(SearchIncludeFragment.dataverse)) and empty SearchIncludeFragment.query}">
                    <!--THIS IS EMPTY / BROWSE / LOGGED IN / PERMS-->
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses eq 0 and SearchIncludeFragment.facetCountDatasets eq 0 and SearchIncludeFragment.facetCountFiles eq 0}">
                        <!--BROWSE CAN_ADD ZERO COUNTS-->
                        <p>
                            <h:outputFormat value="#{bundle['dataverse.results.empty.browse.loggedin.perms.zero']}" escape="false">
                                <f:param value="#{settingsWrapper.guidesBaseUrl}"/>
                                <f:param value="#{settingsWrapper.guidesVersion}"/>
                            </h:outputFormat>
                        </p>
                    </ui:fragment>
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses gt 0 or SearchIncludeFragment.facetCountDatasets gt 0 or SearchIncludeFragment.facetCountFiles gt 0}">
                        <!--BROWSE CAN_ADD HIDDEN-->
                        <p>#{bundle['dataverse.results.empty.browse.loggedin.perms.hidden']}</p>
                    </ui:fragment>
                </ui:fragment>
            </div>

            <div id="resultsFacetsTopBlock" jsf:rendered="#{!empty SearchIncludeFragment.filterQueries}">
                <ui:fragment rendered="#{(SearchIncludeFragment.wasSolrErrorEncountered())}">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="bg-danger padding-12 margin-top margin-bottom">
                                <p><h:outputFormat value=" #{bundle['dataverse.search.facet.error']}" escape="false">
                                    <f:param value="#{SearchIncludeFragment.dataverse.alias}"/>                                    
                                </h:outputFormat></p>
                            </div>
                        </div>
                    </div>   
                </ui:fragment>

                <ui:repeat value="#{SearchIncludeFragment.filterQueries}" var="filterQuery" rendered="#{!SearchIncludeFragment.wasSolrErrorEncountered()}">
                    <ui:param name="friendlyNames" value="#{SearchIncludeFragment.getFriendlyNamesFromFilterQuery(filterQuery)}"/>
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" styleClass="facetLink facetSelected" rendered="#{not empty friendlyNames}">
                        <h:outputText value="#{friendlyNames.get(0)}: " escape="false"/>
                        <h:outputText value="#{friendlyNames.get(1)} " />
                        <h:outputText styleClass="sr-only" value=" #{bundle['dataverse.search.filters.remove.screenReaderPostfix']}" />
                        <span class="glyphicon glyphicon-remove"></span>
                        <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                        <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}' disable="#{clickedFilterQuery == filterQuery}"/>
                        </c:forEach>
                        <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                        <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                        <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                    </h:outputLink>
                </ui:repeat>
            </div>

            <div id="resultsCountPaginatorBlock" class="row" jsf:rendered="#{SearchIncludeFragment.searchResultsCount > 0}">
                <!-- RESULTS COUNT -->
                <div class="results-count col-sm-6">
                    <h:outputFormat value="#{bundle['dataverse.results.count.toofresults']}">
                        <f:param value="#{SearchIncludeFragment.paginationGuiStart}"/>
                        <f:param value="#{SearchIncludeFragment.paginationGuiEnd}"/>
                        <f:param value="#{SearchIncludeFragment.searchResultsCount}"/>
                    </h:outputFormat>
                </div>
                <!-- SORT + PAGINATOR -->
                <div class="results-sort-pagination col-sm-6">
                    <!-- SORT BY -->
                    <div class="btn-group pull-right">
                        <button id="sortResults" type="button" class="btn btn-default btn-access dropdown-toggle" data-toggle="dropdown"
                                aria-haspopup="true" aria-controls="sortResultsMenu" aria-expanded="false">
                            <span class="glyphicon glyphicon-sort"/> #{bundle['dataverse.results.btn.sort']} <span class="caret"/>
                        </button>
                        <ul id="sortResultsMenu" class="dropdown-menu pull-right text-left" role="menu" aria-labelledby="sortResults">
                            <li role="none">
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}" role="menuitem">
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.nameAZ']}" styleClass="#{SearchIncludeFragment.sortedByNameAsc ? 'highlightBold' : ''}" escape="false"/>
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.current']}" styleClass="sr-only" rendered="#{SearchIncludeFragment.sortedByNameAsc}" />
                                    
                                    <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                                    <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                                    <f:param name="page" value="1"/>
                                    <f:param name="sort" value="#{SearchIncludeFragment.searchFieldNameSort}"/>
                                    <f:param name="order" value="#{SearchIncludeFragment.ASCENDING}"/>
                                </h:outputLink>
                            </li>
                            <li role="none">
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}" role="menuitem">
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.nameZA']}" styleClass="#{SearchIncludeFragment.sortedByNameDesc ? 'highlightBold' : ''}" escape="false"/>
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.current']}" styleClass="sr-only" rendered="#{SearchIncludeFragment.sortedByNameDesc}" />
                                    
                                    <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                                    <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                                    <f:param name="page" value="1"/>
                                    <f:param name="sort" value="#{SearchIncludeFragment.searchFieldNameSort}"/>
                                    <f:param name="order" value="#{SearchIncludeFragment.DESCENDING}"/>
                                </h:outputLink>
                            </li>
                            <li role="none">
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}" role="menuitem">
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.newest']}" styleClass="#{SearchIncludeFragment.sortedByReleaseDateDesc? 'highlightBold' : ''}" escape="false"/>
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.current']}" styleClass="sr-only" rendered="#{SearchIncludeFragment.sortedByReleaseDateDesc}" />
                                    
                                    <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                                    <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                                    <f:param name="page" value="1"/>
                                    <f:param name="sort" value="#{SearchIncludeFragment.searchFieldReleaseOrCreateDate}"/>
                                    <f:param name="order" value="#{SearchIncludeFragment.DESCENDING}"/>
                                </h:outputLink>
                            </li>
                            <li role="none">
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}" role="menuitem">
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.oldest']}" styleClass="#{SearchIncludeFragment.sortedByReleaseDateAsc? 'highlightBold' : ''}" escape="false"/>
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.current']}" styleClass="sr-only" rendered="#{SearchIncludeFragment.sortedByReleaseDateAsc}" />
                                    
                                    <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                                    <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                                    <f:param name="page" value="1"/>
                                    <f:param name="sort" value="#{SearchIncludeFragment.searchFieldReleaseOrCreateDate}"/>
                                    <f:param name="order" value="#{SearchIncludeFragment.ASCENDING}"/>
                                </h:outputLink>
                            </li>
                            <ui:fragment rendered="#{!(empty SearchIncludeFragment.query)}">
                                <li role="none">
                                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" role="menuitem">
                                        <h:outputText value="#{bundle['dataverse.results.btn.sort.option.relevance']}" styleClass="#{SearchIncludeFragment.sortedByRelevance ? 'highlightBold' : ''}" escape="false"/>
                                        <h:outputText value="#{bundle['dataverse.results.btn.sort.option.current']}" styleClass="sr-only" rendered="#{SearchIncludeFragment.sortedByRelevance}" />
                                        
                                        <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                                        <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                        </c:forEach>
                                        <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                                        <f:param name="page" value="1"/>
                                        <f:param name="sort" value="#{SearchIncludeFragment.searchFieldRelevance}"/>
                                        <f:param name="order" value="#{SearchIncludeFragment.DESCENDING}"/>
                                    </h:outputLink>
                                </li>
                            </ui:fragment>
                        </ul>
                    </div>
                </div>
            </div>

            <o:importFunctions type="org.omnifaces.el.functions.Strings" />
            <ui:param name="descriptionAbbreviationThreshold" value="280"/>
            <!--CARDS-->
            <h:dataTable id="resultsTable" value="#{SearchIncludeFragment.searchResultsList}" var="result"
                         rendered="#{!(empty SearchIncludeFragment.searchResultsList)}">
                <h:column>
                    <!--DATAVERSE CARDS-->
                    <div class="dataverseResult clearfix #{result.unpublishedState ? 'unpublished' : ''}" jsf:rendered="#{result.type eq searchObjectTypeEnum.DATAVERSES}">
                        <c:set var="dvUrl" value="/dataverse/#{result.dataverseAlias}"/>
                        <c:set var="dvUrlFinal" value="#{!SearchIncludeFragment.rootDv and !result.isInTree ? dvUrl : widgetWrapper.wrapURL(dvUrl)}" />
                        <c:set var="dvCardUrlsTarget" value="#{!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView ? '_blank' : ''}" />
                        <c:set var="dvIsLinked" value="#{!SearchIncludeFragment.rootDv and !result.isInTree}" />
                        
                        <c:set var="dvParentUrl" value="/dataverse/#{result.dataverseParentAlias}"/>
                        <c:set var="dvParentUrlFinal" value="#{!SearchIncludeFragment.rootDv and !result.isInTree ? dvParentUrl : widgetWrapper.wrapURL(dvParentUrl)}"/>
                        
                        
                        <div class="card-preview-icon-block text-center">
                            <h:outputLink value="#{dvUrlFinal}" target="#{dvCardUrlsTarget}" tabindex="-1"
                                    pt:aria-label="#{bundle.dataverse} #{result.name}">
                                <h:graphicImage value="#{result.imageUrl}" rendered="#{!empty result.imageUrl}" alt="#{bundle['dataverse.results.cards.dataverse.logoPrefix']} #{result.name}"/>
                                <span class="icon-dataverse text-brand" jsf:rendered="#{empty result.imageUrl}" role="img" aria-label="#{bundle.dataverse}"/>
                            </h:outputLink>
                        </div>

                        <div class="card-content-container">
                            <div class="card-title-icon-block">
                                <span class="icon-dataverse text-brand pull-right" title="#{bundle.dataverse}" role="img" aria-label="#{bundle.dataverse}" />
                                <span class="glyphicon glyphicon-new-window text-brand pull-right" title="#{bundle.harvested}" jsf:rendered="#{result.harvested}" role="img" aria-label="#{bundle.harvested}" />
                                <span class="glyphicon glyphicon-link text-brand pull-right" title="#{bundle.linked}" jsf:rendered="#{dvIsLinked}" role="img" aria-label="#{bundle.linked}" />
                                <div class="label-container pull-right">
                                    <h:outputText value="#{bundle['dataset.versionUI.draft']}" styleClass="label label-primary" rendered="#{result.draftState}"/>
                                    <h:outputText value="#{bundle['dataset.versionUI.unpublished']}" styleClass="label label-warning" rendered="#{result.unpublishedState}"/>
                                    <h:outputText value="#{result.userRole}" styleClass="label label-primary" rendered="#{!empty result.userRole}"/>
                                </div>
                                
                                <h:outputLink value="#{dvUrlFinal}" target="#{dvCardUrlTarget}">
                                    <h:outputText value="#{bundle.dataverse}" styleClass="sr-only" />
                                    <h:outputText value="#{result.name}" rendered="#{result.nameHighlightSnippet == null}"/>
                                    <h:outputText value="#{result.nameHighlightSnippet}" rendered="#{result.nameHighlightSnippet != null}" escape="false"/>
                                </h:outputLink>
                                <h:outputText value="(#{result.dataverseAffiliation})" styleClass="text-muted" style="margin-left: .5em;" rendered="#{!empty result.dataverseAffiliation and result.dataverseAffiliationHighlightSnippet == null}"/>
                                <h:outputText value="(#{result.dataverseAffiliationHighlightSnippet})" styleClass="text-muted" style="margin-left: .5em;" rendered="#{result.dataverseAffiliationHighlightSnippet != null}" escape="false"/>
                            </div>
    
                            <h:outputText value="#{result.dateToDisplayOnCard}" styleClass="text-muted" style="margin-right:.5em;"/>
    
                            <h:outputLink value="#{dvParentUrlFinal}" target="#{dvCardUrlsTarget}" rendered="#{result.parent.id != SearchIncludeFragment.dataverse.id}">
                                <h:outputText value="#{bundle.dataverse}" styleClass="sr-only" />
                                <h:outputText value="#{result.parent.get('name')}"/>
                            </h:outputLink>
    
                            <hr style="margin:.5em;border:0;"/>
    
                            <h:outputText value="#{Strings:abbreviate(result.descriptionNoSnippet, descriptionAbbreviationThreshold)}" rendered="#{result.descriptionSnippets.size() eq 0}"/>
    
                            <ui:repeat value="#{result.descriptionSnippets}" var="snippet" varStatus="varStatus"
                                       rendered="#{result.descriptionSnippets.size() gt 0}">
                                <h:outputText value="#{snippet}" escape="false"/>
                                <h:outputText value="... " rendered="#{varStatus.last != true}"/>
                            </ui:repeat>
    
                            <ui:repeat value="#{result.highlightsAsList}" var="highlight" rendered="#{result.highlightsAsList.size() gt 0}">
                                <ui:repeat value="#{highlight.snippets}" var="snippet">
                                    <div>
                                        <h:outputText value="#{highlight.solrField.nameSearchable}: #{snippet}" escape="false"/>
                                        <ui:param value="#{highlight.solrField.nameFacetable}:intentional" name="unfriendly"/>
                                    </div>
                                </ui:repeat>
                            </ui:repeat>
                        </div>
                    </div>
                    <!--DATASET CARDS-->
                    <div class="datasetResult clearfix #{result.unpublishedState ? 'unpublished' : ''}" jsf:rendered="#{result.type eq searchObjectTypeEnum.DATASETS}">
                        <c:set var="dsUrlFinal" value="#{!SearchIncludeFragment.rootDv and !result.isInTree ? result.datasetUrl : widgetWrapper.wrapURL(result.datasetUrl)}" />
                        <c:set var="dsCardUrlsTarget" value="#{(!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}" />
                        <c:set var="dsIsLinked" value="#{!SearchIncludeFragment.rootDv and !result.isInTree}" />
                        
                        <c:set var="dsParentUrl" value="/dataverse/#{result.dataverseAlias}"/>
                        <c:set var="dsParentUrlFinal" value="#{!SearchIncludeFragment.rootDv and !result.isInTree ? dsParentUrl : widgetWrapper.wrapURL(dvParentAlias)}"/>
                    
                    
                        <div class="card-preview-icon-block text-center">
                            <a href="#{dsUrlFinal}" target="#{dsCardUrlsTarget}" tabindex="-1"
                                    aria-label="#{bundle.dataset} #{result.title} #{result.draftState ? bundle['dataset.versionUI.draft'] : ''}">
                                <h:graphicImage value="#{result.imageUrl}" rendered="#{!empty result.imageUrl}" alt="#{bundle['dataverse.results.cards.dataset.thumbnailPrefix']} #{result.title}" />
                                <span class="icon-dataset" jsf:rendered="#{empty result.imageUrl}" role="img" aria-label="#{bundle.dataset}"/>
                            </a>
                        </div>

                        <div class="card-content-container">
                            <div class="card-title-icon-block">
                                <span class="icon-dataset text-info pull-right" title="#{bundle.dataset}" role="img" aria-label="#{bundle.dataset}" />
                                <span class="glyphicon glyphicon-new-window text-info pull-right" title="#{bundle.harvested}" jsf:rendered="#{result.harvested}" role="img" aria-label="#{bundle.harvested}" />
                                <span class="glyphicon glyphicon-link text-info pull-right" title="#{bundle.linked}" jsf:rendered="#{dsIsLinked}" role="img" aria-label="#{bundle.linked}" />
                                <div class="label-container pull-right">
                                    <h:outputText value="#{bundle['dataset.versionUI.draft']}" styleClass="label label-primary" rendered="#{result.draftState}"/>
                                    <h:outputText value="#{result.userRole}" styleClass="label label-primary" rendered="#{!empty result.userRole}"/>
                                    <h:outputText value="#{bundle['dataset.versionUI.inReview']}" styleClass="label label-success" rendered="#{result.inReviewState}"/>
                                    <h:outputText value="#{bundle['dataset.versionUI.unpublished']}" styleClass="label label-warning" rendered="#{result.unpublishedState}"/>
                                    <h:outputText value="#{bundle['dataset.versionUI.deaccessioned']}" styleClass="label label-danger" rendered="#{result.deaccessionedState}"/>
                                </div>
                                <a href="#{dsUrlFinal}" target="#{dsCardUrlsTarget}">
                                    <h:outputText value="#{bundle.dataset}" styleClass="sr-only" />
                                    <h:outputText value="#{result.title}" rendered="#{result.titleHighlightSnippet == null}"/>
                                    <h:outputText value="#{result.titleHighlightSnippet}" rendered="#{result.titleHighlightSnippet != null}" escape="false"/>
                                    <h:outputText value="#{bundle['dataset.versionUI.draft']}" styleClass="sr-only" rendered="#{result.draftState}" />
                                </a>
                            </div>
    
                            <h:outputText styleClass="text-muted" value="#{result.dateToDisplayOnCard}"/>
    
                            <h:outputText styleClass="text-muted" value=" - " rendered="#{result.parent.id != SearchIncludeFragment.dataverse.id}"/>
                            
                            <h:outputLink value="#{dsParentUrl}" target="#{dsCardUrlsTarget}" rendered="#{result.parent.id != SearchIncludeFragment.dataverse.id}">
                                <h:outputText value="#{bundle.dataverse}" styleClass="sr-only" />
                                <h:outputText value="#{result.parent.get('name')}"/>
                            </h:outputLink>
    
                            <div class="resultDatasetCitationBlock #{result.deaccessionedState ? 'alert alert-danger bg-danger' : 'alert alert-info bg-citation'}">
                                <h:outputText value="#{result.citationHtml != null ? result.citationHtml : result.citation}" escape="false"/>
                            </div>
                            
                            <h:outputText value="#{Strings:abbreviate(result.descriptionNoSnippet, descriptionAbbreviationThreshold)}" rendered="#{result.descriptionSnippets.size() eq 0}"/>
    
                            <ui:repeat value="#{result.descriptionSnippets}" var="snippet" varStatus="varStatus"
                                       rendered="#{result.descriptionSnippets.size() gt 0}">
                                <h:outputText value="... #{snippet} ..." escape="false"/>
                            </ui:repeat>
    
                            <ui:repeat value="#{result.highlightsAsList}" var="highlight" rendered="#{result.highlightsAsList.size() > 0}">
                                <ui:repeat value="#{highlight.snippets}" var="snippet">
                                    <div>
                                        <h:outputText value="#{highlight.displayName}: #{snippet}" escape="false"/>
                                    </div>
                                </ui:repeat>
                            </ui:repeat>
    
                            <div jsf:rendered="#{result.harvested and !empty result.harvestingDescription}" class="text-muted small margin-top-half">
                                <h:outputText value="#{result.harvestingDescription}"/>
                            </div>
                        </div>
                    </div>
                    <!--FILE CARDS-->
                    <div class="fileResult clearfix #{result.unpublishedState ? 'unpublished' : ''}" jsf:rendered="#{result.type eq searchObjectTypeEnum.FILES}">
                        <c:set var="fileUrlFinal" value="#{!SearchIncludeFragment.rootDv and !result.isInTree ? (result.harvested ? result.fileDatasetUrl : result.fileUrl) : widgetWrapper.wrapURL(result.harvested ? result.fileDatasetUrl : result.fileUrl)}" />
                        <c:set var="fileCardUrlsTarget" value="#{(!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}" />
                        <c:set var="fileIsLinked" value="#{!SearchIncludeFragment.rootDv and !result.isInTree}" />
                        
                        <c:set var="fileParentUrlFinal" value="#{!SearchIncludeFragment.rootDv and !result.isInTree ? result.fileDatasetUrl : widgetWrapper.wrapURL(result.fileDatasetUrl)}"/>
                    
                        <div class="card-preview-icon-block text-center">
                            <a href="#{fileUrlFinal}" target="#{fileCardUrlsTarget}" tabindex="-1"
                                    aria-label="#{bundle.file} #{result.name} #{result.draftState ? bundle['dataset.versionUI.draft'] : ''}" >
                                <h:graphicImage value="#{result.imageUrl}" rendered="#{!empty result.imageUrl}" alt="#{bundle['dataverse.results.cards.file.thumbnailPrefix']} #{result.name}"/>
                                <span class="icon-#{dataFileServiceBean.getFileClass(result.entity)} text-muted h1"
                                      jsf:rendered="#{empty result.imageUrl}" role="img" aria-label="#{bundle.file}"/>
                            </a>
                        </div>

                        <div class="card-content-container">
                            <div class="card-title-icon-block">
                                <span class="icon-file text-muted pull-right" title="#{bundle.file}" role="img" aria-label="#{bundle.file}"/>
                                <span class="glyphicon glyphicon-new-window text-muted pull-right" title="#{bundle.harvested}" jsf:rendered="#{result.harvested}" role="img" aria-label="#{bundle.harvested}"/>
                                <span class="glyphicon glyphicon-link text-muted pull-right" title="#{bundle.linked}" jsf:rendered="#{fileIsLinked}" role="img" aria-label="#{bundle.linked}"/>
    
                                <span class="text-danger glyphicon glyphicon-lock" title="#{bundle.restricted}" jsf:rendered="#{result.fileAccess eq 'Restricted' and !permissionsWrapper.hasDownloadFilePermission(result.entity)}"/>
                                <span class="text-success icon-unlock" title="#{bundle.restrictedaccess}" jsf:rendered="#{result.fileAccess eq 'Restricted' and permissionsWrapper.hasDownloadFilePermission(result.entity)}"/>
                                <div class="label-container pull-right">
                                    <h:outputText value="#{bundle['dataset.versionUI.draft']}" styleClass="label label-primary" rendered="#{result.draftState}"/>
                                    <h:outputText value="#{bundle['dataset.versionUI.inReview']}" styleClass="label label-success" rendered="#{result.inReviewState}"/>
                                    <h:outputText value="#{bundle['dataset.versionUI.unpublished']}" styleClass="label label-warning" rendered="#{result.unpublishedState}"/>
                                    <h:outputText value="#{result.userRole}" styleClass="label label-primary" rendered="#{!empty result.userRole}"/>
                                </div>
                                <a href="#{fileUrlFinal}" target="#{fileCardUrlsTarget}">
                                    <h:outputText value="#{bundle.file}" styleClass="sr-only" />
                                    <h:outputText value="#{result.name}" rendered="#{result.nameHighlightSnippet == null}"/>
                                    <h:outputText value="#{result.nameHighlightSnippet}" rendered="#{result.nameHighlightSnippet != null}" escape="false"/>
                                    <h:outputText value="#{bundle['dataset.versionUI.draft']}" styleClass="sr-only" rendered="#{result.draftState}" />
                                </a>
                            </div>
    
                            <div>
                                <h:outputText styleClass="text-muted" value="#{result.dateToDisplayOnCard} - "/>
                                <a href="#{fileParentUrlFinal}" target="#{fileCardUrlsTarget}">
                                    <h:outputText value="#{bundle.dataset}" styleClass="sr-only" />
                                    <h:outputText value="#{result.parent.get('name')}"/></a>
                            </div>
    
                            <div>
                                <h:outputText value="#{bundle['dataverse.results.cards.files.tabularData']}" styleClass="text-muted" rendered="#{!empty SearchIncludeFragment.tabularDataDisplayInfo(result.entity)}"/>
                                <h:outputText value="#{result.filetype}" styleClass="text-muted" rendered="#{empty SearchIncludeFragment.tabularDataDisplayInfo(result.entity) and result.fileTypeHighlightSnippet == null}"/>
                                <h:outputText value="#{result.fileTypeHighlightSnippet}" styleClass="text-muted" rendered="#{empty SearchIncludeFragment.tabularDataDisplayInfo(result.entity) and result.fileTypeHighlightSnippet != null}" escape="false"/>
    
                                <h:outputText styleClass="text-muted" value=" - #{SearchIncludeFragment.dataFileSizeDisplay(result.entity)}" rendered="#{!result.harvested}" />
    
                                <h:outputText styleClass="text-muted" value=" - #{SearchIncludeFragment.dataFileChecksumDisplay(result.entity)}" rendered="#{!result.harvested and !SearchIncludeFragment.isTabular(result.entity) and !(empty SearchIncludeFragment.dataFileChecksumDisplay(result.entity))}"/>
    
                                <!-- if this is a tabular data file, extra information, such as the numbers of variables and observations and the unf, is displayed: -->
                                <h:outputText styleClass="text-muted" value=" - #{SearchIncludeFragment.tabularDataDisplayInfo(result.entity)}"
                                                rendered="#{!empty SearchIncludeFragment.tabularDataDisplayInfo(result.entity)}"/>
                            </div>
    
                            <div class="file-tags-block" jsf:rendered="#{(!empty result.fileCategories) or (!empty result.tabularDataTags)}">
                                <ui:repeat value="#{result.fileCategories}" var="cat">
                                    <h:outputText value="#{cat}" styleClass="label label-default"/>
                                </ui:repeat>
                                <ui:repeat value="#{result.tabularDataTags}" var="tag">
                                    <h:outputText value="#{tag}" styleClass="label label-info"/>
                                </ui:repeat>
                            </div>
    
                            <h:outputText value="#{Strings:abbreviate(result.descriptionNoSnippet, descriptionAbbreviationThreshold)}" rendered="#{result.descriptionSnippets.size() eq 0}"/>
    
                            <ui:repeat value="#{result.descriptionSnippets}" var="snippet" varStatus="varStatus"
                                       rendered="#{result.descriptionSnippets.size() gt 0}">
                                <h:outputText value="#{snippet}" escape="false"/>
                                <h:outputText value="... " rendered="#{varStatus.last != true}"/>
                            </ui:repeat>
    
                            <div jsf:rendered="#{result.highlightsAsList.size() > 0}">
                                <ui:repeat value="#{result.highlightsAsList}" var="highlight">
                                    <ui:repeat value="#{highlight.snippets}" var="snippet">
                                        <div>
                                            <h:outputText value="#{highlight.displayName}: #{snippet}" escape="false"/>
                                        </div>
                                    </ui:repeat>
                                </ui:repeat>
                            </div>
    
                            <div jsf:rendered="#{result.harvested and !empty result.harvestingDescription}">
                                <h:outputText value="#{result.harvestingDescription}" styleClass="text-muted" style="margin-right:.5em;"/>
                            </div>
                        </div>
                    </div>
                </h:column>
            </h:dataTable>
            <!-- BOTTOM PAGINATOR -->
            <ui:include src="search-include-pager.xhtml"></ui:include>
        </div>
    </div>

    <!-- this remote command is called once the page finishes its initial load,
            in order to display the images for the card -->
    <h:form>
        <p:remoteCommand name="postLoad"
                         process="@this"
                         update=":#{p:resolveClientId('resultsTable', view)}"
                         actionListener="#{SearchIncludeFragment.setDisplayCardValues()}" />
    </h:form>

    <p:dialog header="#{bundle['dataverse.results.dialog.addDataGuest.header']}" widgetVar="addData_popup" modal="true">
        <p class="help-block">
            <span class="glyphicon glyphicon-warning-sign text-danger"/>
            <h:outputFormat styleClass="text-danger" value="#{dataverseHeaderFragment.signupAllowed ? bundle['dataverse.results.dialog.addDataGuest.msg.signup'] : bundle['dataverse.results.dialog.addDataGuest.msg']}" escape="false">
                <f:param value="#{navigationWrapper.redirectPage}"/>
                <f:param value="#{dataverseHeaderFragment.getSignupUrl(navigationWrapper.redirectPage)}"/>
            </h:outputFormat>
        </p>
        <div class="button-block">
            <button type="button" onclick="PF('addData_popup').hide()" class="btn btn-default" value="#{bundle.close}">
                #{bundle.close}
            </button>
        </div>
    </p:dialog>
    <script type="text/javascript">
        $(document).ready(function () {
            // Calls the p:remoteCommand postLoad.
            // Posted at end of fragment to work correctly with Account information
            <ui:remove>
            // See: https://github.com/IQSS/dataverse/issues/2004
            </ui:remove>
            postLoad();

            $('[data-toggle=offcanvas]').click(function() {
                var showText = '#{bundle.show}';
                var hideText = '#{bundle.hide}';
                $(this).attr('aria-expanded', !($('.row-offcanvas').hasClass('active')));
                $(this).find('.show-hide-text').text($('.row-offcanvas').hasClass('active') ? showText : hideText);
                $('.row-offcanvas').toggleClass('active', 200);
            });
        });
    </script>
</ui:composition>

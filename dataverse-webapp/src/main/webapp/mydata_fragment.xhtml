<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:o="http://omnifaces.org/ui"
                xmlns:jsf="http://xmlns.jcp.org/jsf">

    <c:set var="page" value="/dataverseuser.xhtml?selectTab=dataRelatedToMe"/>

    <div class="row">
        <div class="col-xs-12">
            <p class="help-block">
                #{bundle['mydataFragment.infoAccess']}
            </p>
        </div>
    </div>


<!-- start: panel -->

    <div class="row" id="my_data_filter_column2">
        <h:form>
        <div class="#{widgetWrapper.widgetView ? 'col-sm-12' : 'col-sm-8'}">

                <p:inputText id="searchBasic" styleClass="search-input"
                             size="40"
                             value="#{MyDataSearchFragment.query}"
                             onkeypress="if (event.keyCode == 13) { submitsearch(); return false; }"/>
                <p:watermark for="searchBasic" value="#{bundle['mydataFragment.search']}"/>
                <p:commandLink id="searchbutton" styleClass="btn btn-default" action="#{MyDataSearchFragment.searchRedirect(dataverseRedirectPage)}">
                    <span class="glyphicon glyphicon-search"/> #{bundle['dataverse.search.btn.find']}
                </p:commandLink>
        </div>

        <div class="col-xs-4 pull-right text-right #{widgetWrapper.widgetView ? 'col-sm-12' : 'col-sm-8'}"
             jsf:rendered="#{MyDataSearchFragment.isSuperuser()}">
            #{bundle['mydataFragment.resultsByUserName']}
                <p:inputText id="searchUserId"
                             styleClass="ui-inputfield ui-inputtext ui-widget ui-state-default ui-corner-all"
                             size="25"
                             value="#{MyDataSearchFragment.searchUserId}"
                             onkeypress="if (event.keyCode == 13) { submitsearch(); return false; }"/>
                <p:watermark for="searchUserId" value="#{MyDataSearchFragment.searchUserId}"/>
        </div>
            <p:remoteCommand name="submitsearch"
                             action="#{MyDataSearchFragment.searchRedirect(dataverseRedirectPage)}"/>
        </h:form>
    </div>
<!-- start: panel body -->
<div class="panel-body clearfix">

    <!-- Search Results / SOLR IS UP -->
    <div id="search-row-panel" class="row row-offcanvas row-offcanvas-left" >
        <div id="dv-sidebar" class="col-sm-4 col-md-3 sidebar-offcanvas">
            <!--TYPE FACET (DATAVERSES, DATASETS, FILES)-->
            <h:form id="facetType">
                <!--DATAVERSE TOGGLE-->
                <div class="clearfix">
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}"
                                  styleClass="facetTypeChBox facetLink #{MyDataSearchFragment.selectedTypesList.contains('dataverses') ? 'facetSelected': ''}"
                                  disabled="#{MyDataSearchFragment.getNewSelectedTypes('dataverses') == null}">
                        <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                        <f:param name="types" value="#{MyDataSearchFragment.getNewSelectedTypes('dataverses')}"/>
                        <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                        <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                            <f:param name="rf#{status.index}" value='#{clickedRoleFilter}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                        <f:param name="page" value="1"/>
                        <p:selectBooleanCheckbox
                                value="#{MyDataSearchFragment.selectedTypesList.contains('dataverses') ? true : false}"
                                disabled="#{MyDataSearchFragment.getNewSelectedTypes('dataverses') == null ? true : false}"/>
                    </h:outputLink>
                    <!--DATAVERSES ONLY-->
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" disabled="#{false}" styleClass="facetTypeLink chkbox-label-margin #{MyDataSearchFragment.selectedTypesList.contains('dataverses') ? 'facetSelected': ''}">
                        <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                        <f:param name="types" value="dataverses"/>
                        <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                        <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                            <f:param name="rf#{status.index}" value='#{clickedRoleFilter}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                        <f:param name="page" value="1"/>

                        <i class="icon-dataverse text-icon-inline"></i>

                        <h:outputFormat styleClass="facetTypeDataverse"
                                        value="#{bundle['dataverse.results.types.dataverses']} #{MyDataSearchFragment.selectedTypesList.contains('dataverses') ? '&#40;{0}&#41;': ''}">
                            <f:param value="#{MyDataSearchFragment.facetCountDataverses != null ? MyDataSearchFragment.facetCountDataverses : 0}"/>
                        </h:outputFormat>
                    </h:outputLink>
                </div>
                <!--DATASETS TOGGLE-->
                <div class="clearfix">
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}"
                                  styleClass="facetTypeChBox facetLink #{MyDataSearchFragment.selectedTypesList.contains('datasets') ? 'facetSelected': ''}"
                                  disabled="#{MyDataSearchFragment.getNewSelectedTypes('datasets') == null}">
                        <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                        <f:param name="types" value="#{MyDataSearchFragment.getNewSelectedTypes('datasets')}"/>
                        <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                        <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                            <f:param name="rf#{status.index}" value='#{clickedRoleFilter}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                        <f:param name="page" value="1"/>
                        <p:selectBooleanCheckbox
                                value="#{MyDataSearchFragment.selectedTypesList.contains('datasets') ? true : false}"
                                disabled="#{MyDataSearchFragment.getNewSelectedTypes('datasets') == null ? true : false}"/>
                    </h:outputLink>
                    <!--DATASETS ONLY-->
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" disabled="#{false}" styleClass="facetTypeLink chkbox-label-margin #{MyDataSearchFragment.selectedTypesList.contains('datasets') ? 'facetSelected': ''}">
                        <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                        <f:param name="types" value="datasets"/>
                        <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                        <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                            <f:param name="rf#{status.index}" value='#{clickedRoleFilter}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                        <f:param name="page" value="1"/>

                        <i class="icon-dataset text-icon-inline"></i>

                        <h:outputFormat styleClass="facetTypeDataset"
                                        value="#{bundle['dataverse.results.types.datasets']} #{MyDataSearchFragment.selectedTypesList.contains('datasets') ? '&#40;{0}&#41;': ''}">
                            <f:param value="#{MyDataSearchFragment.facetCountDatasets != null ? MyDataSearchFragment.facetCountDatasets : 0}"/>
                        </h:outputFormat>
                    </h:outputLink>
                </div>
                <!--FILES TOGGLE-->
                <div class="clearfix">
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}"
                                  styleClass="facetTypeChBox facetLink #{MyDataSearchFragment.selectedTypesList.contains('files') ? 'facetSelected': ''}"
                                  disabled="#{MyDataSearchFragment.getNewSelectedTypes('files') == null}">
                        <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                        <f:param name="types" value="#{MyDataSearchFragment.getNewSelectedTypes('files')}"/>
                        <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                        <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                            <f:param name="rf#{status.index}" value='#{clickedRoleFilter}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                        <f:param name="page" value="1"/>
                        <p:selectBooleanCheckbox value="#{MyDataSearchFragment.selectedTypesList.contains('files') ? true : false}"
                                                 disabled="#{MyDataSearchFragment.getNewSelectedTypes('files') == null ? true : false}"/>
                    </h:outputLink>
                    <!--FILES ONLY-->
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" disabled="#{false}" styleClass="facetTypeLink chkbox-label-margin #{MyDataSearchFragment.selectedTypesList.contains('files') ? 'facetSelected': ''}">
                        <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                        <f:param name="types" value="files"/>
                        <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                        <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                            <f:param name="rf#{status.index}" value='#{clickedRoleFilter}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                        <f:param name="page" value="1"/>

                        <i class="icon-file text-icon-inline"></i>

                        <h:outputFormat styleClass="facetTypeFile"
                                        value="#{bundle['dataverse.results.types.files']} #{MyDataSearchFragment.selectedTypesList.contains('files') ? '&#40;{0}&#41;': ''}">
                            <f:param value="#{MyDataSearchFragment.facetCountFiles != null ? MyDataSearchFragment.facetCountFiles : 0}"/>
                        </h:outputFormat>
                    </h:outputLink>
                </div>
            </h:form>

            <!--NON-TYPE FACETS-->
            <h:form id="facetCategoryForm" rendered="#{MyDataSearchFragment.searchResultsCount > 0}">
                <p:dataList id="facetCategoryList" value="#{MyDataSearchFragment.facetCategoryList}" var="facetCategory">
                    <h:outputText value="#{facetCategory.displayName}" styleClass="facetCategoryName"/>
                    <p:dataList value="#{facetCategory.facetLabel}" var="facetLabel" rows="#{MyDataSearchFragment.getNumberOfFacets(facetCategory.name,5)}">
                        <h:outputLink value="#{widgetWrapper.wrapURL(page)}" rendered="#{!MyDataSearchFragment.filterQueries.contains(facetLabel.filterQuery)}" styleClass="facetLink">
                            <h:outputFormat value="#{facetLabel.name} &#40;{0}&#41;">
                                <f:param value="#{facetLabel.count}"/>
                            </h:outputFormat>
                            <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                            <f:param name="fq#{MyDataSearchFragment.filterQueries.size()}" value="#{facetLabel.filterQuery}"/>
                            <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                            </c:forEach>
                            <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                                <f:param name="rf#{status.index}" value='#{clickedRoleFilter}'/>
                            </c:forEach>
                            <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                            <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                            <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                        </h:outputLink>

                        <h:outputLink value="#{widgetWrapper.wrapURL(page)}" rendered="#{MyDataSearchFragment.filterQueries.contains(facetLabel.filterQuery)}" styleClass="facetLink facetSelected">
                            <h:outputFormat value="#{facetLabel.name} &#40;{0}&#41;">
                                <f:param value="#{facetLabel.count}"/>
                            </h:outputFormat>
                            <span class="glyphicon glyphicon-remove"></span>
                            <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                            <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                <f:param name="fq#{status.index}" value='#{clickedFilterQuery}' disable="#{clickedFilterQuery == facetLabel.filterQuery}"/>
                            </c:forEach>
                            <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                                <f:param name="rf#{status.index}" value='#{clickedRoleFilter}'/>
                            </c:forEach>
                            <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                            <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                            <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                        </h:outputLink>
                    </p:dataList>

                    <!--ROLES-->
                    <h:form id="rolesForm" rendered="#{MyDataSearchFragment.searchResultsCount > 0}">
                        <h:outputText value="#{bundle['dashboard.list_users.tbl_header.roles']}" styleClass="facetCategoryName"/>
                        <p:dataList id="rolesList" value="#{MyDataSearchFragment.myRoles}" var="role" rows="#{MyDataSearchFragment.myRoles.size()}">
                            <h:outputLink value="#{widgetWrapper.wrapURL(page)}" rendered="#{!MyDataSearchFragment.roleFilters.contains(role)}" styleClass="facetLink">
                                <h:outputFormat value="#{role}" />
                                <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                                <f:param name="rf#{MyDataSearchFragment.roleFilters.size()}" value="#{role}"/>
                                <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                    <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                </c:forEach>
                                <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                                    <f:param name="rf#{status.index}" value='#{clickedRoleFilter}'/>
                                </c:forEach>
                                <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                                <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                                <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                            </h:outputLink>

                            <h:outputLink value="#{widgetWrapper.wrapURL(page)}" rendered="#{MyDataSearchFragment.roleFilters.contains(role)}" styleClass="facetLink facetSelected">
                                <h:outputFormat value="#{role}" />
                                <span class="glyphicon glyphicon-remove"></span>
                                <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                                <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                    <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                </c:forEach>
                                <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                                    <f:param name="rf#{status.index}" value='#{clickedRoleFilter}' disable="#{clickedRoleFilter == role}"/>
                                </c:forEach>
                                <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                                <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                                <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                            </h:outputLink>
                        </p:dataList>
                    </h:form>
                </p:dataList>
            </h:form>
        </div>
        <div id="dv-main" class="col-sm-8 col-md-9">
            <!--DEBUG BEGIN-->
            <div jsf:rendered="#{MyDataSearchFragment.debug}" style="background-color: lightgray">
                <tt>
                    <h:outputText value="mode:#{MyDataSearchFragment.mode} "/>
                    <h:outputText value="#{MyDataSearchFragment.filterQueriesDebug}"/><br/>
                    <h:outputText value="solrIsDown=#{MyDataSearchFragment.solrIsDown}"/><br/>
                    <h:outputText value="errorFromSolr: #{MyDataSearchFragment.errorFromSolr}" rendered="#{MyDataSearchFragment.errorFromSolr != null}"/>
                </tt>
            </div>
            <!--DEBUG END-->

            <!--toggle sidebar button-->
            <p class="visible-xs-block">
                <button type="button" class="btn btn-primary btn-xs" data-toggle="offcanvas"><i class="glyphicon glyphicon-chevron-left"></i> Filter Results</button>
            </p>

            <!-- Message for zero results -->
            <div id="emptyResults" class="emptyResults bg-warning"
                 jsf:rendered="#{(MyDataSearchFragment.searchResultsList.size() == 0) and (!MyDataSearchFragment.wasSolrErrorEncountered())}">
                <ui:fragment rendered="#{MyDataSearchFragment.mode == MyDataSearchFragment.searchModeString}">
                    <!--THIS IS EMPTY / SEARCH-->
                    <ui:fragment rendered="#{MyDataSearchFragment.searchResultsList.size() eq 0}">
                        <!--SEARCH ZERO COUNTS-->
                        <p><h:outputFormat value="#{bundle['dataverse.results.empty.zero']}" escape="false">
                            <f:param value="#{settingsWrapper.guidesBaseUrl}"/>
                            <f:param value="#{settingsWrapper.guidesVersion}"/>
                        </h:outputFormat></p>
                    </ui:fragment>
                    <ui:fragment rendered="#{MyDataSearchFragment.searchResultsList.size() gt 0}">
                        <!--SEARCH HIDDEN-->
                        <p><h:outputFormat value="#{bundle['dataverse.results.empty.hidden']}" escape="false">
                            <f:param value="#{settingsWrapper.guidesBaseUrl}"/>
                            <f:param value="#{settingsWrapper.guidesVersion}"/>
                        </h:outputFormat></p>
                    </ui:fragment>
                    <ui:fragment rendered="#{MyDataSearchFragment.errorFromSolr != null}">
                        <p>
                            <a data-toggle="collapse" data-parent="#emptyResults" href="#technicalDetails" aria-expanded="true" aria-controls="technicalDetails">[+] #{bundle['dataverse.results.empty.link.technicalDetails']}</a>
                        </p>
                        <div id="technicalDetails" class="collapse">
                            <pre><h:outputText value="#{MyDataSearchFragment.errorFromSolr}"/></pre>
                        </div>
                    </ui:fragment>
                </ui:fragment>
                <ui:fragment rendered="#{dataverseSession.user.authenticated 
                                        and MyDataSearchFragment.mode == MyDataSearchFragment.browseModeString}">
                    <!--THIS IS EMPTY / BROWSE / LOGGED IN / PERMS-->
                    <ui:fragment rendered="#{MyDataSearchFragment.searchResultsList.size() eq 0}">
                        <!--BROWSE CAN_ADD ZERO COUNTS-->
                        <p>
                            <h:outputFormat value="#{dataverseRedirectPage == 'dataverseuser.xhtml' ? bundle['account.results.empty.browse.loggedin.perms.zero'] : bundle['dataverse.results.empty.browse.loggedin.perms.zero']}" escape="false">
                                <f:param value="#{settingsWrapper.guidesBaseUrl}"/>
                                <f:param value="#{settingsWrapper.guidesVersion}"/>
                            </h:outputFormat>
                        </p>
                    </ui:fragment>
                    <ui:fragment rendered="#{MyDataSearchFragment.searchResultsList.size() gt 0}">
                        <!--BROWSE CAN_ADD HIDDEN-->
                        <p>#{bundle['dataverse.results.empty.browse.loggedin.perms.hidden']}</p>
                    </ui:fragment>
                </ui:fragment>

            </div>

            <div id="resultsFacetsTopBlock" jsf:rendered="#{!empty MyDataSearchFragment.filterQueries or !empty MyDataSearchFragment.roleFilters}">
                <ui:repeat value="#{MyDataSearchFragment.filterQueries}" var="filterQuery" rendered="#{!MyDataSearchFragment.wasSolrErrorEncountered()}">
                    <ui:param name="friendlyNames" value="#{MyDataSearchFragment.getFriendlyNamesFromFilterQuery(filterQuery)}"/>
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" styleClass="facetLink facetSelected" rendered="#{not empty friendlyNames}">
                        <h:outputText value="#{friendlyNames.get(0)}: #{friendlyNames.get(1)}"/> <span class="glyphicon glyphicon-remove"></span>
                        <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                        <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}' disable="#{clickedFilterQuery == filterQuery}"/>
                        </c:forEach>
                        <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                            <f:param name="rf#{status.index}" value='#{clickedRoleFilter}'/>
                        </c:forEach>
                        <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                        <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                        <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                    </h:outputLink>
                </ui:repeat>
                <ui:repeat value="#{MyDataSearchFragment.roleFilters}" var="roleFilter" rendered="#{!MyDataSearchFragment.wasSolrErrorEncountered()}">
                    <ui:param name="friendlyNames" value="#{roleFilter}}"/>
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" styleClass="facetLink facetSelected">
                        <h:outputText value="Role: #{roleFilter}"/> <span class="glyphicon glyphicon-remove"></span>
                        <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                        <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="status">
                            <f:param name="rf#{status.index}" value='#{clickedRoleFilter}' disable="#{clickedRoleFilter == roleFilter}"/>
                        </c:forEach>
                        <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                        <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                        <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                    </h:outputLink>
                </ui:repeat>
            </div>

            <div id="resultsCountPaginatorBlock" class="row" jsf:rendered="#{MyDataSearchFragment.searchResultsList.size() gt 0}">
                <!-- RESULTS COUNT -->
                <div class="results-count col-xs-6">
                    <h:outputFormat value="#{bundle['dataverse.results.count.toofresults']}">
                        <f:param value="#{MyDataSearchFragment.paginationGuiStart}"/>
                        <f:param value="#{MyDataSearchFragment.paginationGuiEnd}"/>
                        <f:param value="#{MyDataSearchFragment.searchResultsCount}"/>
                    </h:outputFormat>
                </div>
            </div>

            <o:importFunctions type="org.omnifaces.el.functions.Strings" />
            <ui:param name="descriptionAbbreviationThreshold" value="280"/>
            <!--CARDS-->
            <h:dataTable id="myDataResultsTable" styleClass="#{MyDataSearchFragment.searchResultsCount > 0 ? '' : 'resultsNone'}" value="#{MyDataSearchFragment.searchResultsList}" var="result"
                         rendered="#{MyDataSearchFragment.searchResultsList.size() > 0}">
                <h:column>
                    <ui:fragment rendered="#{MyDataSearchFragment.debug == true}">
                        <h:outputText value="score: #{result.score}" rendered="#{MyDataSearchFragment.mode == MyDataSearchFragment.searchModeString}"/>
                    </ui:fragment>
                    <!--DATAVERSE CARDS-->
                    <div class="dataverseResult clearfix" jsf:rendered="#{result.type == 'dataverses'}">
                        <div class="card-title-icon-block">
                            <span class="glyphicon glyphicon-link text-brand pull-right" title="#{bundle.linked}" jsf:rendered="#{!MyDataSearchFragment.rootDv and !result.isInTree}"/>
                            <span class="glyphicon glyphicon-new-window text-brand pull-right" title="#{bundle.harvested}" jsf:rendered="#{result.harvested}"/>
                            <span class="icon-dataverse text-brand pull-right" title="#{bundle.dataverse}"/>
                            <c:set var="dvUrl" value="/dataverse/#{result.dataverseAlias}"/>
                            <h:outputLink value="#{!MyDataSearchFragment.rootDv and !result.isInTree ? dvUrl : widgetWrapper.wrapURL(dvUrl)}" target="#{!MyDataSearchFragment.rootDv and !result.isInTree and widgetWrapper.widgetView ? '_blank' : ''}">
                                <h:outputText value="#{result.name}" style="padding:4px 0;" rendered="#{result.nameHighlightSnippet == null}"/>
                                <h:outputText value="#{result.nameHighlightSnippet}" style="padding:4px 0;" rendered="#{result.nameHighlightSnippet != null}" escape="false"/>
                                <h:outputText value=" (#{result.entityId})" style="padding:4px 0;" rendered="#{MyDataSearchFragment.debug == true}"/>
                            </h:outputLink>
                            <h:outputText value="(#{result.dataverseAffiliation})" styleClass="text-muted" style="margin-left: .5em;" rendered="#{!empty result.dataverseAffiliation and result.dataverseAffiliationHighlightSnippet == null}"/>
                            <h:outputText value="(#{result.dataverseAffiliationHighlightSnippet})" styleClass="text-muted" style="margin-left: .5em;" rendered="#{result.dataverseAffiliationHighlightSnippet != null}" escape="false"/>
                            <h:outputText value="#{bundle['dataset.versionUI.draft']}" styleClass="label label-primary" rendered="#{result.draftState}"/>
                            <h:outputText value="#{bundle['dataset.versionUI.unpublished']}" styleClass="label label-warning" rendered="#{result.unpublishedState}"/>
                            <h:outputText value="#{bundle['dataset.versionUI.published']}" styleClass="label label-success" rendered="#{result.publishedState}"/>
                            <ui:repeat value="#{MyDataSearchFragment.getRolesForEntity(result.entityId)}" var="role">
                                <h:outputText value="#{role}" styleClass="label label-info"/>
                            </ui:repeat>
                        </div>
                        <div class="card-preview-icon-block text-center">
                            <h:outputLink value="#{!MyDataSearchFragment.rootDv and !result.isInTree ? dvUrl : widgetWrapper.wrapURL(dvUrl)}" target="#{!MyDataSearchFragment.rootDv and !result.isInTree and widgetWrapper.widgetView ? '_blank' : ''}">
                                <h:graphicImage value="#{result.imageUrl}" rendered="#{!empty result.imageUrl}"/>
                                <span class="icon-dataverse text-brand" jsf:rendered="#{empty result.imageUrl}"/>
                            </h:outputLink>
                        </div>

                        <h:outputText value="#{result.dateToDisplayOnCard}" styleClass="text-muted" style="margin-right:.5em;"/>

                        <c:set var="dvParentUrl" value="/dataverse/#{result.dataverseParentAlias}"/>
                        <h:outputLink value="#{!MyDataSearchFragment.rootDv and !result.isInTree ? dvParentUrl : widgetWrapper.wrapURL(dvParentUrl)}" target="#{!MyDataSearchFragment.rootDv and !result.isInTree and widgetWrapper.widgetView ? '_blank' : ''}" rendered="#{result.parent.id != MyDataSearchFragment.dataverse.id}">
                            <h:outputText value="#{result.parent.get('name')}"/>
                        </h:outputLink>

                        <hr style="margin:.5em;border:0;"/>

                        <h:outputText value="#{Strings:abbreviate(result.descriptionNoSnippet, descriptionAbbreviationThreshold)}" rendered="#{result.descriptionSnippets.size() eq 0}"/>

                        <ui:repeat value="#{result.descriptionSnippets}" var="snippet" varStatus="varStatus"
                                   rendered="#{result.descriptionSnippets.size() gt 0}">
                            <h:outputText value="#{snippet}" escape="false"/>
                            <h:outputText value="... " rendered="#{varStatus.last != true}"/>
                        </ui:repeat>

                        <ui:fragment rendered="#{false and result.matchedFields.size() > 0}">
                            <h:outputText value="#{bundle['dataverse.results.cards.foundInMetadata']} "/>
                            <ui:repeat value="#{result.matchedFields}" var="field" varStatus="varStatus">
                                <h:outputText value="#{field}"/>
                                <h:outputText value=", " rendered="#{varStatus.last != true}"/>
                            </ui:repeat>
                        </ui:fragment>

                        <ui:repeat value="#{result.highlightsAsList}" var="highlight" rendered="#{result.highlightsAsList.size() gt 0}">
                            <ui:repeat value="#{highlight.snippets}" var="snippet">
                                <div>
                                    <h:outputText value="#{highlight.solrField.nameSearchable}: #{snippet}" escape="false"/>
                                    <ui:param value="#{highlight.solrField.nameFacetable}:intentional" name="unfriendly"/>
                                </div>
                            </ui:repeat>
                        </ui:repeat>
                    </div>
                    <!--DATASET CARDS-->
                    <div class="datasetResult clearfix" jsf:rendered="#{result.type == 'datasets'}">
                        <div class="card-title-icon-block">
                            <span class="glyphicon glyphicon-link text-info pull-right" title="#{bundle.linked}" jsf:rendered="#{!MyDataSearchFragment.rootDv and !result.isInTree}"/>
                            <span class="glyphicon glyphicon-new-window text-info pull-right" title="#{bundle.harvested}" jsf:rendered="#{result.harvested}"/>
                            <span class="icon-dataset text-info pull-right" title="#{bundle.dataset}"/>
                            <a href="#{!MyDataSearchFragment.rootDv and !result.isInTree ? result.datasetUrl : widgetWrapper.wrapURL(result.datasetUrl)}" target="#{(!MyDataSearchFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                <h:outputText value="#{result.title}" style="padding:4px 0;" rendered="#{result.titleHighlightSnippet == null}"/>
                                <h:outputText value="#{result.titleHighlightSnippet}" style="padding:4px 0;" rendered="#{result.titleHighlightSnippet != null}" escape="false"/>
                                <h:outputText value=" (#{result.entityId})" style="padding:4px 0;" rendered="#{MyDataSearchFragment.debug == true}"/></a>

                            <h:outputText value="#{bundle['dataset.versionUI.draft']}" styleClass="label label-primary" rendered="#{result.draftState}"/>
                            <h:outputText value="#{bundle['dataset.versionUI.inReview']}" styleClass="label label-success" rendered="#{result.inReviewState}"/>
                            <h:outputText value="#{bundle['dataset.versionUI.unpublished']}" styleClass="label label-warning" rendered="#{result.unpublishedState}"/>
                            <h:outputText value="#{bundle['dataset.versionUI.deaccessioned']}" styleClass="label label-danger" rendered="#{result.deaccessionedState}"/>
                            <h:outputText value="#{bundle['dataset.versionUI.published']}" styleClass="label label-success" rendered="#{result.publishedState}"/>
                            <ui:repeat value="#{MyDataSearchFragment.getRolesForEntity(result.entityId)}" var="role">
                                <h:outputText value="#{role}" styleClass="label label-info"/>
                            </ui:repeat>
                        </div>
                        <div class="card-preview-icon-block text-center">
                            <a href="#{!MyDataSearchFragment.rootDv and !result.isInTree ? result.datasetUrl : widgetWrapper.wrapURL(result.datasetUrl)}" target="#{(!MyDataSearchFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                <h:graphicImage value="#{result.imageUrl}" rendered="#{!empty result.imageUrl}"/>
                                <span class="icon-dataset" jsf:rendered="#{empty result.imageUrl}"/>
                            </a>
                        </div>

                        <h:outputText styleClass="text-muted" value="#{result.dateToDisplayOnCard}"/>

                        <h:outputText styleClass="text-muted" value=" - " rendered="#{result.parent.id != MyDataSearchFragment.dataverse.id}"/>

                        <c:set var="dvParentAlias" value="/dataverse/#{result.dataverseAlias}"/>
                        <h:outputLink value="#{!MyDataSearchFragment.rootDv and !result.isInTree ? dvParentAlias : widgetWrapper.wrapURL(dvParentAlias)}" target="#{(!MyDataSearchFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}" rendered="#{result.parent.id != MyDataSearchFragment.dataverse.id}">
                            <h:outputText value="#{result.parent.get('name')}"/>
                        </h:outputLink>

                        <div class="resultDatasetCitationBlock #{result.deaccessionedState ? 'alert alert-danger bg-danger' : 'alert alert-info bg-citation'}">
                            <h:outputText value="#{result.citationHtml != null ? result.citationHtml : result.citation}" escape="false"/>
                        </div>

                        <h:outputText value="#{Strings:abbreviate(result.descriptionNoSnippet, descriptionAbbreviationThreshold)}" rendered="#{result.descriptionSnippets.size() eq 0}"/>

                        <ui:repeat value="#{result.descriptionSnippets}" var="snippet" varStatus="varStatus"
                                   rendered="#{result.descriptionSnippets.size() gt 0}">
                            <h:outputText value="... #{snippet} ..." escape="false"/>
                        </ui:repeat>

                        <ui:fragment rendered="#{false and result.matchedFields.size() > 0}">
                            <h:outputText value="#{bundle['dataverse.results.cards.foundInMetadata']} "/>
                            <ui:repeat value="#{result.matchedFields}" var="field" varStatus="varStatus">
                                <h:outputText value="#{field}"/>
                                <h:outputText value=", " rendered="#{varStatus.last != true}"/>
                            </ui:repeat>
                        </ui:fragment>

                        <ui:repeat value="#{result.highlightsAsList}" var="highlight" rendered="#{result.highlightsAsList.size() > 0}">
                            <ui:repeat value="#{highlight.snippets}" var="snippet">
                                <div>
                                    <h:outputText value="#{highlight.displayName}: #{snippet}" escape="false"/>
                                </div>
                            </ui:repeat>
                        </ui:repeat>

                        <div jsf:rendered="#{result.harvested and !empty result.harvestingDescription}" class="text-muted small margin-top-half">
                            <h:outputText value="#{result.harvestingDescription}"/>
                        </div>
                    </div>
                    <!--FILE CARDS-->
                    <div class="fileResult clearfix" jsf:rendered="#{result.type == 'files'}">
                        <div class="card-title-icon-block">
                            <span class="glyphicon glyphicon-link text-muted pull-right" title="#{bundle.linked}" jsf:rendered="#{!MyDataSearchFragment.rootDv and !result.isInTree}"/>
                            <span class="glyphicon glyphicon-new-window text-muted pull-right" title="#{bundle.harvested}" jsf:rendered="#{result.harvested}"/>
                            <span class="icon-file text-muted pull-right" title="#{bundle.file}"/>

                            <span class="text-danger glyphicon glyphicon-lock" title="#{bundle.restricted}" jsf:rendered="#{result.fileAccess eq 'Restricted' and !permissionsWrapper.hasDownloadFilePermission(result.entity)}"/>
                            <span class="text-success icon-unlock" title="#{bundle.restrictedaccess}" jsf:rendered="#{result.fileAccess eq 'Restricted' and permissionsWrapper.hasDownloadFilePermission(result.entity)}"/>
                            <a href="#{!MyDataSearchFragment.rootDv and !result.isInTree ? (result.harvested ? result.fileDatasetUrl : result.fileUrl) : widgetWrapper.wrapURL(result.harvested ? result.fileDatasetUrl : result.fileUrl)}" target="#{(!MyDataSearchFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                <h:outputText value="#{result.name}" style="padding:4px 0;" rendered="#{result.nameHighlightSnippet == null}"/>
                                <h:outputText value="#{result.nameHighlightSnippet}" style="padding:4px 0;" rendered="#{result.nameHighlightSnippet != null}" escape="false"/>
                                <h:outputText value=" (#{result.entityId})" style="padding:4px 0;" rendered="#{MyDataSearchFragment.debug == true}"/></a>
                            <h:outputText value="#{bundle['dataset.versionUI.draft']}" styleClass="label label-primary" rendered="#{result.draftState}"/>
                            <h:outputText value="#{bundle['dataset.versionUI.inReview']}" styleClass="label label-success" rendered="#{result.inReviewState}"/>
                            <h:outputText value="#{bundle['dataset.versionUI.unpublished']}" styleClass="label label-warning" rendered="#{result.unpublishedState}"/>
                            <h:outputText value="#{bundle['dataset.versionUI.published']}" styleClass="label label-success" rendered="#{result.publishedState}"/>
                            <ui:repeat value="#{MyDataSearchFragment.getRolesForEntity(result.entityId)}" var="role">
                                <h:outputText value="#{role}" styleClass="label label-info"/>
                            </ui:repeat>
                        </div>

                        <div class="card-preview-icon-block text-center">
                            <a href="#{!MyDataSearchFragment.rootDv and !result.isInTree ? (result.harvested ? result.fileDatasetUrl : result.fileUrl) : widgetWrapper.wrapURL(result.harvested ? result.fileDatasetUrl : result.fileUrl)}" target="#{(!MyDataSearchFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                <h:graphicImage value="#{result.imageUrl}" rendered="#{!empty result.imageUrl}"/>
                                <span class="icon-#{dataFileServiceBean.getFileClass(result.entity)} text-muted h1"
                                      jsf:rendered="#{empty result.imageUrl}"/>
                            </a>
                        </div>

                        <div>
                            <h:outputText styleClass="text-muted" value="#{result.dateToDisplayOnCard} - "/>
                            <a href="#{!MyDataSearchFragment.rootDv and !result.isInTree ? result.fileDatasetUrl : widgetWrapper.wrapURL(result.fileDatasetUrl)}" target="#{(!MyDataSearchFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                <h:outputText value="#{result.parent.get('name')}"/></a>
                        </div>

                        <div>
                            <h:outputText value="#{bundle['dataverse.results.cards.files.tabularData']}" styleClass="text-muted" rendered="#{!empty MyDataSearchFragment.tabularDataDisplayInfo(result.entity)}"/>
                            <h:outputText value="#{result.filetype}" styleClass="text-muted" rendered="#{empty MyDataSearchFragment.tabularDataDisplayInfo(result.entity) and result.fileTypeHighlightSnippet == null}"/>
                            <h:outputText value="#{result.fileTypeHighlightSnippet}" styleClass="text-muted" rendered="#{empty MyDataSearchFragment.tabularDataDisplayInfo(result.entity) and result.fileTypeHighlightSnippet != null}" escape="false"/>

                            <h:outputText styleClass="text-muted" value=" - #{MyDataSearchFragment.dataFileSizeDisplay(result.entity)}" rendered="#{!result.harvested}" />

                            <h:outputText styleClass="text-muted" value=" - #{MyDataSearchFragment.dataFileChecksumDisplay(result.entity)}" rendered="#{!result.harvested and !MyDataSearchFragment.isTabular(result.entity) and !(empty MyDataSearchFragment.dataFileChecksumDisplay(result.entity))}"/>

                            <!-- if this is a tabular data file, extra information, such as the numbers of variables and observations and the unf, is displayed: -->
                            <h:outputText styleClass="text-muted" value=" - #{MyDataSearchFragment.tabularDataDisplayInfo(result.entity)}"
                                          rendered="#{!empty MyDataSearchFragment.tabularDataDisplayInfo(result.entity)}"/>
                        </div>

                        <div class="file-tags-block" jsf:rendered="#{(!empty result.fileCategories) or (!empty result.tabularDataTags)}">
                            <ui:repeat value="#{result.fileCategories}" var="cat">
                                <h:outputText value="#{cat}" styleClass="label label-default"/>
                            </ui:repeat>
                            <ui:repeat value="#{result.tabularDataTags}" var="tag">
                                <h:outputText value="#{tag}" styleClass="label label-info"/>
                            </ui:repeat>
                        </div>

                        <h:outputText value="#{Strings:abbreviate(result.descriptionNoSnippet, descriptionAbbreviationThreshold)}" rendered="#{result.descriptionSnippets.size() eq 0}"/>

                        <ui:repeat value="#{result.descriptionSnippets}" var="snippet" varStatus="varStatus"
                                   rendered="#{result.descriptionSnippets.size() gt 0}">
                            <h:outputText value="#{snippet}" escape="false"/>
                            <h:outputText value="... " rendered="#{varStatus.last != true}"/>
                        </ui:repeat>

                        <div jsf:rendered="#{result.highlightsAsList.size() > 0}">
                            <ui:repeat value="#{result.highlightsAsList}" var="highlight">
                                <ui:repeat value="#{highlight.snippets}" var="snippet">
                                    <div>
                                        <h:outputText value="#{highlight.displayName}: #{snippet}" escape="false"/>
                                    </div>
                                </ui:repeat>
                            </ui:repeat>
                        </div>

                        <div jsf:rendered="#{result.harvested and !empty result.harvestingDescription}">
                            <h:outputText value="#{result.harvestingDescription}" styleClass="text-muted" style="margin-right:.5em;"/>
                        </div>
                    </div>
                </h:column>
            </h:dataTable>
            <!-- BOTTOM PAGINATOR -->
                <!-- PAGINATOR -->
                <ui:fragment rendered="#{MyDataSearchFragment.totalPages != 1}">
                    <o:importFunctions type="java.lang.Math" />
                    <div class="results-sort-pagination results-bottom text-center">
                        <!--<div class="pagination pull-right">-->
                        <ul class="pagination">
                            <!--should take you to page 1-->
                            <li class="#{MyDataSearchFragment.page == '1' ? 'disabled' : ''}">
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}">
                                    <h:outputText value="&#171;"/>
                                    <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                                    <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="role">
                                        <f:param name="rf#{role.index}" value='#{clickedRoleFilter}'/>
                                    </c:forEach>
                                    <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                                    <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                                    <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                                    <f:param name="page" value="1"/>
                                </h:outputLink>
                            </li>
                            <li class="#{MyDataSearchFragment.page == '1' ? 'disabled' : ''}">
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}">
                                    <h:outputText value="&lt; #{bundle.previous}"/>
                                    <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                                    <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="role">
                                        <f:param name="rf#{role.index}" value='#{clickedRoleFilter}'/>
                                    </c:forEach>
                                    <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                                    <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                                    <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                                    <f:param name="page" value="#{Math:max(1,MyDataSearchFragment.page-1).intValue()}"/>
                                </h:outputLink>
                            </li>
                            <c:forEach begin="#{Math:max(1,MyDataSearchFragment.page-Math:max(2,MyDataSearchFragment.page-MyDataSearchFragment.totalPages+4))}"
                                       end="#{Math:min(MyDataSearchFragment.totalPages,MyDataSearchFragment.page+Math:max(2,5-MyDataSearchFragment.page))}"
                                       varStatus="pageStatus">
                                <li class="#{MyDataSearchFragment.page == pageStatus.index ? 'active' : ''}">
                                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}">
                                        <h:outputText value="#{pageStatus.index}">
                                            <f:convertNumber pattern="###,###" />
                                        </h:outputText>
                                        <span class="#{MyDataSearchFragment.page == pageStatus.index ? 'sr-only' : ''}">
                                                <h:outputText value="#{MyDataSearchFragment.page == pageStatus.index ? bundle['dataverse.results.paginator.current'] : ''}"/>
                                            </span>
                                        <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                                        <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                                        <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                        </c:forEach>
                                        <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="role">
                                            <f:param name="rf#{role.index}" value='#{clickedRoleFilter}'/>
                                        </c:forEach>
                                        <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                                        <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                                        <f:param name="page" value="#{pageStatus.index}"/>
                                    </h:outputLink>
                                </li>
                            </c:forEach>
                            <li class="#{MyDataSearchFragment.page == MyDataSearchFragment.totalPages ? 'disabled' : ''}">
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}">
                                    <h:outputText value="#{bundle.next} &gt;"/>
                                    <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                                    <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="role">
                                        <f:param name="rf#{role.index}" value='#{clickedRoleFilter}'/>
                                    </c:forEach>
                                    <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                                    <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                                    <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                                    <f:param name="page" value="#{Math:min(MyDataSearchFragment.page+1,MyDataSearchFragment.totalPages).intValue()}"/>
                                </h:outputLink>
                            </li>
                            <li class="#{MyDataSearchFragment.page == MyDataSearchFragment.totalPages ? 'disabled' : ''}">
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}">
                                    <h:outputText value="&#187;"/>
                                    <f:param name="q" value="#{MyDataSearchFragment.query}"/>
                                    <c:forEach items="#{MyDataSearchFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <c:forEach items="#{MyDataSearchFragment.roleFilters}" var="clickedRoleFilter" varStatus="role">
                                        <f:param name="rf#{role.index}" value='#{clickedRoleFilter}'/>
                                    </c:forEach>
                                    <f:param name="uId" value="#{MyDataSearchFragment.searchUserId}"/>
                                    <f:param name="sort" value="#{MyDataSearchFragment.sortField}"/>
                                    <f:param name="page" value="#{MyDataSearchFragment.totalPages}"/>
                                    <f:param name="types" value="#{MyDataSearchFragment.selectedTypesString}"/>
                                </h:outputLink>
                            </li>
                        </ul>
                    </div>
                </ui:fragment>
        </div>
    </div>

</div><!-- end panel body -->

    <!-- this remote command is called once the page finishes its initial load,
        in order to display the images for the card -->
    <h:form>
        <p:remoteCommand name="postLoadMyData"
                         process="@this"
                         update="@([id$=myDataResultsTable])"
                         actionListener="#{MyDataSearchFragment.setDisplayCardValues()}" />
    </h:form>

    <p:dialog header="#{bundle['dataverse.results.dialog.addDataGuest.header']}" widgetVar="addData_popup" modal="true">
        <p class="help-block">
            <span class="glyphicon glyphicon-warning-sign text-danger"/>
            <h:outputFormat styleClass="text-danger" value="#{dataverseHeaderFragment.signupAllowed ? bundle['dataverse.results.dialog.addDataGuest.msg.signup'] : bundle['dataverse.results.dialog.addDataGuest.msg']}" escape="false">
                <f:param value="#{navigationWrapper.redirectPage}"/>
                <f:param value="#{dataverseHeaderFragment.getSignupUrl(navigationWrapper.redirectPage)}"/>
            </h:outputFormat>
        </p>
        <div class="button-block">
            <button type="button" onclick="PF('addData_popup').hide()" class="btn btn-default" value="#{bundle.close}">
                #{bundle.close}
            </button>
        </div>
    </p:dialog>
    <script type="text/javascript">
        $(document).ready(function () {
            // Calls the p:remoteCommand postLoad.
            // Posted at end of fragment to work correctly with Account information
        <ui:remove>
            // See: https://github.com/IQSS/dataverse/issues/2004
        </ui:remove>
            postLoadMyData();

            $('[data-toggle=offcanvas]').click(function() {
                $('.row-offcanvas').toggleClass('active', 200);
            });
        });
    </script>
</ui:composition>
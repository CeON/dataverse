<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:o="http://omnifaces.org/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:jsf="http://xmlns.jcp.org/jsf"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:iqbs="http://java.sun.com/jsf/composite/iqbs">

<!--@elvariable id="fileMetadata" type="edu.harvard.iq.dataverse.persistence.datafile.FileMetadata"-->

<h:head>
</h:head>

<h:body>

    <script src="#{resource['js/fileupload.js']}"></script>

    <o:importConstants type="edu.harvard.iq.dataverse.persistence.datafile.license.FileTermsOfUse.TermsOfUseType"
                       var="termsOfUseTypeEnum"/>
    <o:importConstants type="edu.harvard.iq.dataverse.persistence.datafile.license.FileTermsOfUse.RestrictType"
                       var="restrictTypeEnum"/>

    <ui:composition template="/dataverse_template.xhtml">
        <ui:param name="pageTitle"
                  value="#{ReplaceDatafilesPage.pageTitle}"/>
        <ui:param name="dataverse" value="#{ReplaceDatafilesPage.fileToBeReplaced.owner.owner}"/>
        <ui:param name="showMessagePanel" value="true"/>
        <ui:define name="body">
            <f:metadata>
                <f:viewParam name="datasetId" value="#{ReplaceDatafilesPage.datasetId}"/>
                <f:viewParam name="fileId" value="#{ReplaceDatafilesPage.fileId}"/>
                <f:viewAction action="#{dataverseSession.updateLocaleInViewRoot}"/>
                <f:viewAction action="#{ReplaceDatafilesPage.init}"/>
                <f:viewAction
                        action="#{dataverseHeaderFragment.initBreadcrumbsForDataFile(ReplaceDatafilesPage.fileToBeReplaced, bundle['file.replaceFile'])}"/>
            </f:metadata>
            
            <h:form id="replaceFileForm">
                <p:focus context="replaceFileForm" rendered="#{facesContext.validationFailed}" />
                
                <div class="form-group row">
                    <div class="col-sm-12">
                        <span class="glyphicon glyphicon-asterisk text-danger" title="#{bundle.requiredField}"/>
                        <h:outputText value=" #{bundle['common.forms.asterisk.tip']}"/>
                    </div>
                </div>
            
                <ui:fragment>
                    <div id="file-replace-original-block" class="form-group row">
                        <div class="col-sm-2 control-label section-title">
                            <span>#{bundle['file.replace.original']}</span>
                        </div>
                        <div class="col-sm-10">
                            <ui:include src="file-info-fragment.xhtml">
                                <ui:param name="fileMetadata"
                                          value="#{ReplaceDatafilesPage.fileToBeReplaced.fileMetadata}"/>
                            </ui:include>
                        </div>
                    </div>
                </ui:fragment>

                <o:importConstants
                        type="edu.harvard.iq.dataverse.settings.SettingsServiceBean.Key"
                        var="settingEnum"/>
                <div id="contentTabs" style="clear: both;">
                                <div jsf:id="httpPanel" jsf:rendered="#{settingsWrapper.HTTPUpload}"
                                     class="panel panel-default">
                                    <a id="headingHTTP" href="#panelCollapseHTTP"
                                         class="panel-heading text-info"
                                         data-toggle="collapse"
                                         aria-controls="panelCollapseHTTP" aria-expanded="true">
                                        
                                        #{bundle['file.fromHTTP']} &#160;<span class="glyphicon glyphicon-chevron-up"/>
                                    </a>
                                    <div id="panelCollapseHTTP" class="panel-collapse collapse in"
                                         aria-labelledby="headingHTTP" role="region">
                                        <div class="panel-body" jsf:id="httpUploadDisabledDueToExistingRsyncPackage"
                                             jsf:rendered="#{ReplaceDatafilesPage.dataset.getEditVersion().hasPackageFile and
                                              !ReplaceDatafilesPage.dataset.released}">
                                            <p class="help-block">
                                                <span class="glyphicon glyphicon-warning-sign text-warning"></span>
                                            </p>

                                            <div class="panel-body"
                                                 jsf:id="httpUploadDisabledDueToExistingRsyncPackagePublished">
                                                <p class="help-block">
                                                    <span class="glyphicon glyphicon-warning-sign text-warning"></span>
                                                    <h:outputText class="text-warning"
                                                                  value=" #{bundle['file.rsyncUpload.httpUploadDisabledDueToRsyncFileExistingAndPublished']}"/>
                                                </p>
                                            </div>
                                        </div>
                                        <div class="panel-body" jsf:id="contentOfHttpPanel">
                                            <p class="help-block">
                                                <h:outputFormat value="#{bundle['file.replace.upload.selectToReplace.tipMoreInformation']}"
                                                                escape="false">
                                                    <f:param value="#{settingsWrapper.guidesBaseUrl}"/>
                                                    <f:param value="#{settingsWrapper.guidesVersion}"/>
                                                </h:outputFormat>
                                            </p>

                                            <p:fileUpload id="fileUpload"
                                                          class="#{(ReplaceDatafilesPage.lockedFromEdits || ReplaceDatafilesPage.fileToBeSaved != null ? 'disabled' : '')}"
                                                          dragDropSupport="true"
                                                          auto="true"
                                                          disabled="#{ReplaceDatafilesPage.lockedFromEdits || ReplaceDatafilesPage.fileToBeSaved != null}"
                                                          listener="#{ReplaceDatafilesPage.handleFileUpload}"
                                                          update="@form"
                                                          label="#{bundle['file.replace.upload.selectToReplaceBtn']}"
                                                          onstart="#{ReplaceDatafilesPage.uploadStarted()};"
                                                          onerror="uploadFailure();"
                                                          sizeLimit="#{ReplaceDatafilesPage.getMaxFileUploadSizeInBytes()}"
                                                          fileLimit="1"
                                                          invalidSizeMessage="#{bundle['file.edit.error.file_exceeds_limit']}"
                                                          fileLimitMessage="#{bundle['file.replace.upload.error.onlyOneFile']}"
                                                          sequential="true"
                                                          widgetVar="fileUploadWidget">
                                            </p:fileUpload>

                                            <script>

                                                function uploadWidgetDropMsg() {
                                                    var fileUpload = $('div[id$="fileUpload"] div.ui-fileupload-content');
                                                    if ($(fileUpload).children('#dragdropMsg').length === 0) {
                                                        $(fileUpload).prepend('<div id="dragdropMsg">#{bundle['file.replace.upload.selectToReplace.dragdropMsg']}</div>');
                                                    }
                                                }

                                                $(document).ready(function () {
                                                    uploadWidgetDropMsg();
                                                });
                                            </script>
                                        </div>

                                        <div jsf:id="dropboxBlock"
                                             jsf:rendered="#{settingsWrapper.isHasDropBoxKey() and !ReplaceDatafilesPage.isLockedFromEdits() }"
                                             class="margin-top panel-body">
                                            <!-- Dropbox upload widget -->
                                            <p class="help-block">#{bundle['file.fromDropbox.tip']}</p>
                                            <h:inputText id="dropBoxSelectionInput" style="display:none"
                                                         value="#{ReplaceDatafilesPage.dropBoxSelection}"/>
                                            <p:commandButton id="dropBoxButton"
                                                             actionListener="#{ReplaceDatafilesPage.handleDropBoxUpload}"
                                                             update="@form" style="display:none;"/>
                                            <p:commandButton id="dropBoxUserButton"
                                                             disabled="#{ReplaceDatafilesPage.fileToBeSaved != null}"
                                                             value="#{bundle['file.fromDropbox']}"
                                                             onclick="openDropboxChooser();" icon="dropin-btn-status"/>
                                            <p:message for="dropBoxButton" id="dropBoxUploadMessage" display="text"
                                                       redisplay="false"/>
                                        </div>

                                        <p:message for="fileUpload" id="uploadMessage" display="text"/>


                                    </div>
                                </div>
                                <div jsf:id="filesCounts">

                                    <!-- Files Table -->
                                    <p:dataTable id="filesTable"
                                                 value="#{ReplaceDatafilesPage.fileMetadatas}"
                                                 rendered="#{!empty ReplaceDatafilesPage.fileMetadatas}"
                                                 rowIndexVar="rowNum"
                                                 rowKey="#{fileMetadata.dataFile.storageIdentifier}"
                                                 var="fileMetadata"
                                                 widgetVar="filesTable"
                                                 emptyMessage="#{bundle['file.noUploadedFiles.tip']}"
                                                 styleClass="filesTable medium-min-width"
                                    >
                                        <p:column class="col-file-thumb text-center"
                                                  style="width:73px !important;padding:4px 10px;" ariaHeaderText="#{bundle['file.replace.column.icon.ariaHeader']}">
                                            <div class="thumbnail-block">
                                                <!-- Default Icon -->
                                                <span class="icon-#{dataFileServiceBean.getFileClass(fileMetadata.dataFile)} file-thumbnail-icon text-muted"
                                                      jsf:rendered="#{(!empty fileMetadata.dataFile.id and !dataFileServiceBean.isThumbnailAvailable(fileMetadata.dataFile)) or (empty fileMetadata.dataFile.id and !fileMetadata.dataFile.previewImageAvailable)}"/>
                                                <ui:fragment
                                                        rendered="#{empty fileMetadata.dataFile.id and !empty fileMetadata.dataFile.storageIdentifier and fileMetadata.dataFile.previewImageAvailable}">
                                                    <h:graphicImage
                                                            value="#{ReplaceDatafilesPage.getTemporaryPreviewAsBase64(fileMetadata.dataFile.storageIdentifier)}"/>
                                                    <h:outputText id="imgPreview" value="#{bundle['preview']}"
                                                                  styleClass="bg-info text-info text-center show"/>
                                                </ui:fragment>
                                                <!-- Restricted File Icon -->
                                                <div class="file-icon-restricted-block"
                                                     jsf:rendered="#{fileMetadata.termsOfUse.termsOfUseType eq termsOfUseTypeEnum.RESTRICTED }">
                                                    <span class="icon-unlock text-success"/>
                                                </div>
                                            </div>
                                        </p:column>
                                        <p:column class="col-file-metadata" headerText="#{bundle['file.editSingle.column.file.header']}">
                                            <ui:fragment>
                                                <p:outputLabel styleClass="control-label" for="fileName" indicateRequired="false"
                                                       style="margin-right:1em;margin-bottom:.5em;">
                                                    #{bundle['file.fileName']}
                                                    <span class="glyphicon glyphicon-asterisk text-danger" title="#{bundle.requiredField}"/>
                                                </p:outputLabel>
                                                <p:inputText id="fileName" value="#{fileMetadata.label}"
                                                             style="width:60%; margin-bottom:.5em;">
                                                    <p:ajax event="change" update="fileName"/>
                                                </p:inputText>
                                                <p:message for="fileName" display="text"/>
                                            </ui:fragment>
                                            <!-- TYPE + SIZE + CHECKSUM -->
                                            <div class="text-muted small">
                                                <h:outputText id="fileTypeOutputRegular"
                                                              value="#{fileMetadata.dataFile.friendlyType}"
                                                              rendered="#{!(fileMetadata.dataFile.tabularData)}"/>
                                                <h:outputText id="fileTypeOutputTabular"
                                                              value="#{bundle['file.type.tabularData']}"
                                                              rendered="#{fileMetadata.dataFile.tabularData}"/>
                                                <div class="checksum-block">
                                                    <h:outputText id="fileChecksum"
                                                                  value="#{fileMetadata.dataFile.tabularData ? fileMetadata.dataFile.originalChecksumType : fileMetadata.dataFile.checksumType}: #{fileMetadata.dataFile.checksumValue};"
                                                                  rendered="#{!(empty fileMetadata.dataFile.checksumValue)}"/>
                                                </div>
                                            </div>
                                            <div class="fileDescription">
                                                <ui:fragment>
                                                    <h:outputLabel styleClass="control-label" for="fileDescription"
                                                           style="margin-right:1em; margin-top:.5em; vertical-align:top;">
                                                        #{bundle.description}
                                                    </h:outputLabel>
                                                    <p:inputTextarea id="fileDescription" immediate="true" rows="2"
                                                                     cols="40" value="#{fileMetadata.description}"
                                                                     style="width:60%; margin-top:.5em;">
                                                        <p:ajax event="change" update="fileDescription"/>
                                                    </p:inputTextarea>
                                                    <p:watermark for="fileDescription"
                                                                 value="#{bundle['file.addDescription']}"/>
                                                    <p:message for="fileDescription"/>
                                                </ui:fragment>
                                            </div>
                                            <div class="file-tags-block margin-top-half">
                                                <ui:fragment rendered="#{!(empty fileMetadata.categories)}">
                                                    <ui:repeat value="#{fileMetadata.categories}" var="cat">
                                                        <h:outputText value="#{cat.name}"
                                                                      styleClass="label label-default"/>
                                                    </ui:repeat>
                                                </ui:fragment>
                                                <ui:fragment rendered="#{!(empty fileMetadata.dataFile.tags)}">
                                                    <ui:repeat value="#{fileMetadata.dataFile.tags}" var="tag">
                                                        <h:outputText value="#{tag.typeLabel}"
                                                                      styleClass="label label-info"/>
                                                    </ui:repeat>
                                                </ui:fragment>
                                            </div>
                                        </p:column>
                                        <p:column class="col-file-action text-right" headerText="#{bundle['file.editSingle.column.action.header']}">
                                            <f:facet name="header" class="col-file-action text-right">
                                            </f:facet>
                                            <div style="margin-right:14px;" class="btn-group">
                                                <button id="editFile_#{rowNum}"
                                                        type="button"
                                                        class="btn btn-default btn-access dropdown-toggle"
                                                        data-toggle="dropdown"
                                                        disabled="#{ReplaceDatafilesPage.isLockedFromEdits() ? 'disabled' : ''}"
                                                        aria-haspopup="true" aria-expanded="false">
                                                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"/> #{bundle['file.editFile']}
                                                    <span class="caret"/>
                                                </button>
                                                <ul class="dropdown-menu multi-level pull-right text-left"
                                                    role="menu" aria-labelledby="editFile_#{rowNum}">
                                                    <ui:fragment
                                                            rendered="#{settingsWrapper.provCollectionEnabled}">
                                                        <li class="#{ReplaceDatafilesPage.isLockedFromEdits()  ? 'disabled' : ''}" role="none">
                                                            <p:commandLink id="fileProvenanceButton"
                                                                           pt:role="menuitem"
                                                                           update="@form"
                                                                           oncomplete="PF('editProvenancePopup').show();">
                                                                <f:actionListener
                                                                        binding="#{provPopupFragmentBean.updatePopupStateAndDataset(fileMetadata, ReplaceDatafilesPage.dataset)}"/>
                                                                #{bundle['file.provenance']}
                                                            </p:commandLink>
                                                        </li>
                                                    </ui:fragment>

                                                    <li class="#{ReplaceDatafilesPage.isLockedFromEdits()  ? 'disabled' : ''}" role="none">
                                                        <p:commandLink id="fileCategoriesButton"
                                                                       pt:role="menuitem"
                                                                       actionListener="#{ReplaceDatafilesPage.refreshTagsPopUp(fileMetadata)}"
                                                                       action="#{FileTagModal.initForSingleFile(fileMetadata, ReplaceDatafilesPage.dataset)}"
                                                                       update="@form"
                                                                       oncomplete="PF('editFileTagsPopup').show();">
                                                            #{bundle['file.tags']}
                                                        </p:commandLink>
                                                    </li>
                                                    <li class="#{ReplaceDatafilesPage.isLockedFromEdits() ? 'disabled' : ''}" role="none">
                                                        <p:commandLink onclick="PF('deleteFileConfirmation').show();" pt:role="menuitem">
                                                            <h:outputText value="#{bundle['file.delete']}"/>
                                                        </p:commandLink>
                                                    </li>
                                                </ul>
                                            </div>
                                        </p:column>
                                    </p:dataTable>

                                </div>

                </div>

                <p:fragment id="editDataFilesButtons">
                    <div class="button-block">
                        <p:outputPanel id="filesButtons">
                            <div jsf:rendered="#{!(empty ReplaceDatafilesPage.fileMetadatas)}">
                                <p:commandButton value="#{bundle.saveChanges}" id="datasetSave"
                                                 process="@form"
                                                 update="@form,:messagePanel"
                                                 action="#{ReplaceDatafilesPage.saveReplacement()}"/>
                                
                                <p:commandButton id="cancel" value="#{bundle.cancel}"
                                                 action="#{ReplaceDatafilesPage.returnToFileLandingPage()}"
                                                 process="@this" update="@form"
                                >
                                </p:commandButton>
                            </div>
                            <div jsf:rendered="#{empty ReplaceDatafilesPage.fileMetadatas}">
                                <p:commandButton id="doneFilesButton" value="#{bundle.done}"
                                                 action="#{ReplaceDatafilesPage.returnToFileLandingPage()}"
                                                 process="@this" update="@form"
                                >
                                </p:commandButton>

                            </div>
                        </p:outputPanel>
                    </div>
                </p:fragment>
                <!-- Popups -->
                <p:dialog styleClass="smallPopUp" header="#{bundle['file.addreplace.content_type.header']}"
                          widgetVar="fileTypeDifferentPopup" id="fileTypeDifferentPopup" modal="true">
                    <p class="text-warning"><span
                            class="glyphicon glyphicon-warning-sign"/> #{ReplaceDatafilesPage.getDifferentContentTypeMessage()}
                    </p>
                    <div class="button-block">
                        <p:commandButton value="#{bundle.yesSaveChanges}"
                                         update="@form,:messagePanel"
                                         action="#{ReplaceDatafilesPage.saveReplacementNoFileTypeCheck()}"/>
                        <p:commandButton value="#{bundle.noCancel}" onclick="PF('fileTypeDifferentPopup').hide()"
                                         type="button"/>
                    </div>
                </p:dialog>

                <iqbs:fileTagsDialog dialogWidgetId="editFileTagsPopup"
                                     rendered="#{ReplaceDatafilesPage.fileMetadataSelectedForTagsPopup != null}">

                    <p:ajax event="saveAction" listener="#{ReplaceDatafilesPage.saveFileTagsAndCategories(FileTagModal.selectedFile,
                    FileTagModal.selectedFileMetadataTags,
                    FileTagModal.selectedDataFileTags)}" update="@form:filesTable"/>
                </iqbs:fileTagsDialog>

                <p:dialog styleClass="smallPopUp" header="#{bundle['file.deleteFileDialog.header']}"
                          widgetVar="deleteFileConfirmation" modal="true">
                    <p class="text-warning"><span
                            class="glyphicon glyphicon-warning-sign"/> #{bundle['file.deleteFileDialog.tip']}</p>
                    <ui:fragment rendered="#{ReplaceDatafilesPage.dataset.released}">
                        <p class="text-warning"><span
                                class="glyphicon glyphicon-warning-sign"/> #{bundle['file.deleteFileDialog.failed.tip']}
                        </p>
                    </ui:fragment>
                    <div class="button-block">
                        <p:commandButton value="#{bundle.continue}" onclick="PF('deleteFileConfirmation').hide()"
                                         oncomplete="window.scrollTo(0, 0);deleteFinished();"
                                         update="@form" action="#{ReplaceDatafilesPage.deleteFiles()}"/>
                        <p:commandButton value="#{bundle.cancel}" onclick="PF('deleteFileConfirmation').hide()"
                                         type="button"/>
                    </div>
                </p:dialog>
                <ui:include rendered="#{settingsWrapper.provCollectionEnabled}" src="provenance-popups-fragment.xhtml"/>

                <script type="text/javascript" src="/resources/js/dropins.js" id="dropboxjs"
                        data-app-key="#{settingsWrapper.dropBoxKey}"/>
                        
                <script type="text/javascript">

                    function deleteFinished() {
                        $('button[id$="allDeletesFinished"]').trigger('click');
                    }

                    function checkFilesSelected() {
                        var count = PF('filesTable').getSelectedRowsCount();
                        if (count > 0) {
                            PF('deleteFileConfirmation').show();
                        } else {
                            PF('selectFilesForDeleteFragment').show();
                        }
                    }

                    function uploadWidgetDropRemoveMsg() {
                        $('div[id$="fileUpload"] div.ui-fileupload-content div#dragdropMsg').remove();
                    }

                    function openDropboxChooser() {
                        options = {
                            // Required. Called when a user selects an item in the Chooser.
                            success: function (files) {
                                // Pass the JSON-ized output of the Chooser to the backing bean,
                                // via a hidden input field:
                                $('input[id$="dropBoxSelectionInput"]').val(JSON.stringify(files));
                                console.log(JSON.stringify(files));
                                //alert(JSON.stringify(files));
                                // Trigger the upload processing method in the backing
                                // bean, via an invisible commandButton:
                                $('button[id$="dropBoxButton"]').trigger('click');

                            },
                            linkType: "direct",
                            multiselect: "#{isMultiplyFilesUploadAllowed}",
                        };
                        Dropbox.choose(options);
                    }
                </script>

            </h:form>
        </ui:define>
    </ui:composition>
</h:body>
</html>
